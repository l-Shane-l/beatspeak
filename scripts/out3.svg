<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (2,991,184,989 samples, 3.02%)</title><rect x="214.0" y="229" width="35.6" height="15.0" fill="rgb(239,58,8)" rx="2" ry="2" />
<text  x="217.01" y="239.5" >Eig..</text>
</g>
<g >
<title>dl_main (47,559,391 samples, 0.05%)</title><rect x="1181.7" y="533" width="0.6" height="15.0" fill="rgb(253,174,0)" rx="2" ry="2" />
<text  x="1184.75" y="543.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (186,758,497 samples, 0.19%)</title><rect x="195.9" y="357" width="2.3" height="15.0" fill="rgb(208,72,13)" rx="2" ry="2" />
<text  x="198.95" y="367.5" ></text>
</g>
<g >
<title>Eigen::TriangularViewImpl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u, Eigen::Dense&gt;::operator=&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt; (265,756,219 samples, 0.27%)</title><rect x="202.1" y="389" width="3.2" height="15.0" fill="rgb(233,177,33)" rx="2" ry="2" />
<text  x="205.09" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_if&lt;false&gt;::pconj&lt;float __vector (241,926,507 samples, 0.24%)</title><rect x="249.9" y="229" width="2.9" height="15.0" fill="rgb(252,147,30)" rx="2" ry="2" />
<text  x="252.93" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (10,848,793 samples, 0.01%)</title><rect x="1188.7" y="581" width="0.1" height="15.0" fill="rgb(245,216,23)" rx="2" ry="2" />
<text  x="1191.69" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (2,369,579,908 samples, 2.39%)</title><rect x="337.4" y="197" width="28.2" height="15.0" fill="rgb(233,56,5)" rx="2" ry="2" />
<text  x="340.40" y="207.5" >E..</text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (378,432,418 samples, 0.38%)</title><rect x="896.2" y="437" width="4.5" height="15.0" fill="rgb(219,72,54)" rx="2" ry="2" />
<text  x="899.22" y="447.5" ></text>
</g>
<g >
<title>Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;::operator=&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="197" width="0.6" height="15.0" fill="rgb(235,60,35)" rx="2" ry="2" />
<text  x="200.49" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_product_op&lt;float, float&gt;::packetOp&lt;float __vector (394,474,362 samples, 0.40%)</title><rect x="332.7" y="181" width="4.7" height="15.0" fill="rgb(234,26,20)" rx="2" ry="2" />
<text  x="335.71" y="191.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="325" width="2.5" height="15.0" fill="rgb(218,2,33)" rx="2" ry="2" />
<text  x="202.58" y="335.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop (8,009,542,631 samples, 8.08%)</title><rect x="471.6" y="453" width="95.4" height="15.0" fill="rgb(222,161,10)" rx="2" ry="2" />
<text  x="474.63" y="463.5" >lock_free_q..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::count (184,498,408 samples, 0.19%)</title><rect x="929.5" y="469" width="2.2" height="15.0" fill="rgb(233,86,16)" rx="2" ry="2" />
<text  x="932.52" y="479.5" ></text>
</g>
<g >
<title>cv::waitKey (539,947,036 samples, 0.54%)</title><rect x="1004.3" y="469" width="6.5" height="15.0" fill="rgb(250,206,54)" rx="2" ry="2" />
<text  x="1007.35" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::pstore&lt;float, float __vector (413,423,135 samples, 0.42%)</title><rect x="295.0" y="197" width="4.9" height="15.0" fill="rgb(234,152,23)" rx="2" ry="2" />
<text  x="297.98" y="207.5" ></text>
</g>
<g >
<title>cvShowImage (493,784,823 samples, 0.50%)</title><rect x="998.5" y="453" width="5.8" height="15.0" fill="rgb(211,23,51)" rx="2" ry="2" />
<text  x="1001.47" y="463.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (14,673,240 samples, 0.01%)</title><rect x="1003.0" y="389" width="0.2" height="15.0" fill="rgb(233,78,25)" rx="2" ry="2" />
<text  x="1006.05" y="399.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; &gt;::tail&lt;long&gt; (44,953,789 samples, 0.05%)</title><rect x="261.9" y="325" width="0.5" height="15.0" fill="rgb(245,11,5)" rx="2" ry="2" />
<text  x="264.87" y="335.5" ></text>
</g>
<g >
<title>cv::VideoCapture::retrieve (144,218,263 samples, 0.15%)</title><rect x="381.8" y="437" width="1.7" height="15.0" fill="rgb(225,11,36)" rx="2" ry="2" />
<text  x="384.82" y="447.5" ></text>
</g>
<g >
<title>Eigen::fix&lt;2&gt; (34,394,572 samples, 0.03%)</title><rect x="11.2" y="597" width="0.4" height="15.0" fill="rgb(235,201,35)" rx="2" ry="2" />
<text  x="14.21" y="607.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::generateTrackingPoints (27,960,825 samples, 0.03%)</title><rect x="1020.0" y="437" width="0.4" height="15.0" fill="rgb(225,221,21)" rx="2" ry="2" />
<text  x="1023.04" y="447.5" ></text>
</g>
<g >
<title>__vfprintf_internal (18,502,731 samples, 0.02%)</title><rect x="890.6" y="357" width="0.2" height="15.0" fill="rgb(213,163,54)" rx="2" ry="2" />
<text  x="893.62" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;DataProcessor::log_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="517" width="185.9" height="15.0" fill="rgb(215,120,41)" rx="2" ry="2" />
<text  x="198.86" y="527.5" >std::__invoke&lt;DataProces..</text>
</g>
<g >
<title>Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt;::Block (29,710,630 samples, 0.03%)</title><rect x="262.0" y="293" width="0.3" height="15.0" fill="rgb(232,190,5)" rx="2" ry="2" />
<text  x="264.98" y="303.5" ></text>
</g>
<g >
<title>cv::CvCaptureCAM_V4L::retrieveFrame (133,090,788 samples, 0.13%)</title><rect x="381.8" y="421" width="1.6" height="15.0" fill="rgb(208,226,36)" rx="2" ry="2" />
<text  x="384.83" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::unary_evaluator&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::internal::IndexBased, float&gt;::packet&lt;16, float __vector (57,625,583 samples, 0.06%)</title><rect x="198.9" y="341" width="0.7" height="15.0" fill="rgb(240,5,8)" rx="2" ry="2" />
<text  x="201.87" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::nullary_wrapper&lt;float, Eigen::internal::scalar_constant_op&lt;float&gt;, true, false, false&gt;::packetOp&lt;float __vector (18,553,247 samples, 0.02%)</title><rect x="196.8" y="277" width="0.2" height="15.0" fill="rgb(228,35,37)" rx="2" ry="2" />
<text  x="199.77" y="287.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (482,444,271 samples, 0.49%)</title><rect x="17.5" y="581" width="5.7" height="15.0" fill="rgb(246,157,30)" rx="2" ry="2" />
<text  x="20.48" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (474,059,701 samples, 0.48%)</title><rect x="72.0" y="581" width="5.7" height="15.0" fill="rgb(211,21,30)" rx="2" ry="2" />
<text  x="75.04" y="591.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::drawPoints (23,068,981 samples, 0.02%)</title><rect x="1020.4" y="421" width="0.3" height="15.0" fill="rgb(226,48,35)" rx="2" ry="2" />
<text  x="1023.39" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::operator (471,695,238 samples, 0.48%)</title><rect x="190.2" y="581" width="5.6" height="15.0" fill="rgb(250,178,14)" rx="2" ry="2" />
<text  x="193.23" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (217,076,370 samples, 0.22%)</title><rect x="173.0" y="581" width="2.6" height="15.0" fill="rgb(223,223,15)" rx="2" ry="2" />
<text  x="176.03" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::real_default_impl&lt;float, false&gt;::run (55,010,988 samples, 0.06%)</title><rect x="261.0" y="213" width="0.7" height="15.0" fill="rgb(233,35,48)" rx="2" ry="2" />
<text  x="264.03" y="223.5" ></text>
</g>
<g >
<title>cv::WorkerThread::thread_body (12,606,197,112 samples, 12.72%)</title><rect x="1031.5" y="549" width="150.1" height="15.0" fill="rgb(250,24,45)" rx="2" ry="2" />
<text  x="1034.48" y="559.5" >cv::WorkerThread::t..</text>
</g>
<g >
<title>DataProcessor::log_data (217,834,141 samples, 0.22%)</title><rect x="108.0" y="581" width="2.6" height="15.0" fill="rgb(205,197,37)" rx="2" ry="2" />
<text  x="110.98" y="591.5" ></text>
</g>
<g >
<title>cv::PolyLine (8,716,122 samples, 0.01%)</title><rect x="1031.3" y="453" width="0.1" height="15.0" fill="rgb(230,207,32)" rx="2" ry="2" />
<text  x="1034.32" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::coeffRef (402,649,748 samples, 0.41%)</title><rect x="372.2" y="213" width="4.8" height="15.0" fill="rgb(236,32,26)" rx="2" ry="2" />
<text  x="375.21" y="223.5" ></text>
</g>
<g >
<title>Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;::outerStride (9,844,611 samples, 0.01%)</title><rect x="379.6" y="213" width="0.1" height="15.0" fill="rgb(251,114,44)" rx="2" ry="2" />
<text  x="382.61" y="223.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (9,094,858 samples, 0.01%)</title><rect x="121.8" y="517" width="0.1" height="15.0" fill="rgb(239,72,17)" rx="2" ry="2" />
<text  x="124.83" y="527.5" ></text>
</g>
<g >
<title>Eigen::internal::tridiagonalization_inplace&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (14,785,448,419 samples, 14.92%)</title><rect x="205.3" y="405" width="176.0" height="15.0" fill="rgb(223,173,52)" rx="2" ry="2" />
<text  x="208.25" y="415.5" >Eigen::internal::tridi..</text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (65,781,150 samples, 0.07%)</title><rect x="367.1" y="197" width="0.8" height="15.0" fill="rgb(232,21,40)" rx="2" ry="2" />
<text  x="370.09" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt;::assignPacket&lt;16, 0, float __vector (59,208,183 samples, 0.06%)</title><rect x="31.5" y="581" width="0.7" height="15.0" fill="rgb(233,109,26)" rx="2" ry="2" />
<text  x="34.52" y="591.5" ></text>
</g>
<g >
<title>cvConvertImage (378,134,241 samples, 0.38%)</title><rect x="998.5" y="421" width="4.5" height="15.0" fill="rgb(226,105,16)" rx="2" ry="2" />
<text  x="1001.47" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Triangular2Dense, void&gt;::run (210,825,986 samples, 0.21%)</title><rect x="199.6" y="309" width="2.5" height="15.0" fill="rgb(217,12,52)" rx="2" ry="2" />
<text  x="202.58" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::coeffRef (35,175,805 samples, 0.04%)</title><rect x="148.5" y="581" width="0.4" height="15.0" fill="rgb(206,76,5)" rx="2" ry="2" />
<text  x="151.46" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pstore&lt;float, float __vector (35,045,991 samples, 0.04%)</title><rect x="155.9" y="581" width="0.4" height="15.0" fill="rgb(209,88,53)" rx="2" ry="2" />
<text  x="158.91" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::add_assign_op&lt;float, float&gt;::assignPacket&lt;16, float __vector (2,027,484,297 samples, 2.05%)</title><rect x="275.8" y="213" width="24.1" height="15.0" fill="rgb(222,70,48)" rx="2" ry="2" />
<text  x="278.76" y="223.5" >E..</text>
</g>
<g >
<title>cv::ThreadPool::run (122,577,623 samples, 0.12%)</title><rect x="381.9" y="293" width="1.5" height="15.0" fill="rgb(214,6,54)" rx="2" ry="2" />
<text  x="384.93" y="303.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (55,092,167 samples, 0.06%)</title><rect x="197.5" y="213" width="0.6" height="15.0" fill="rgb(230,70,21)" rx="2" ry="2" />
<text  x="200.49" y="223.5" ></text>
</g>
<g >
<title>g_main_context_prepare (14,189,661 samples, 0.01%)</title><rect x="1010.6" y="373" width="0.1" height="15.0" fill="rgb(216,227,29)" rx="2" ry="2" />
<text  x="1013.58" y="383.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (227,626,308 samples, 0.23%)</title><rect x="757.3" y="421" width="2.7" height="15.0" fill="rgb(218,42,32)" rx="2" ry="2" />
<text  x="760.33" y="431.5" ></text>
</g>
<g >
<title>cv::cvtColor (40,059,402 samples, 0.04%)</title><rect x="383.6" y="453" width="0.5" height="15.0" fill="rgb(208,73,21)" rx="2" ry="2" />
<text  x="386.60" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt;, Eigen::Product&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, 0&gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Dense2Dense, void&gt;::run (4,716,854,145 samples, 4.76%)</title><rect x="205.5" y="325" width="56.2" height="15.0" fill="rgb(250,151,51)" rx="2" ry="2" />
<text  x="208.52" y="335.5" >Eigen..</text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (292,301,777 samples, 0.29%)</title><rect x="1006.2" y="101" width="3.5" height="15.0" fill="rgb(250,200,16)" rx="2" ry="2" />
<text  x="1009.17" y="111.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (108,702,155 samples, 0.11%)</title><rect x="35.8" y="581" width="1.3" height="15.0" fill="rgb(244,153,45)" rx="2" ry="2" />
<text  x="38.78" y="591.5" ></text>
</g>
<g >
<title>cvRunHaarClassifierCascadeSum (27,368,867 samples, 0.03%)</title><rect x="1025.7" y="341" width="0.4" height="15.0" fill="rgb(213,130,24)" rx="2" ry="2" />
<text  x="1028.73" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt;::_M_head (881,672,043 samples, 0.89%)</title><rect x="987.6" y="389" width="10.5" height="15.0" fill="rgb(244,80,31)" rx="2" ry="2" />
<text  x="990.63" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::count (100,604,661 samples, 0.10%)</title><rect x="760.0" y="453" width="1.2" height="15.0" fill="rgb(223,107,13)" rx="2" ry="2" />
<text  x="763.04" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::~binary_evaluator (22,546,199 samples, 0.02%)</title><rect x="379.3" y="229" width="0.2" height="15.0" fill="rgb(224,203,29)" rx="2" ry="2" />
<text  x="382.26" y="239.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (14,120,826,668 samples, 14.25%)</title><rect x="591.9" y="453" width="168.1" height="15.0" fill="rgb(234,116,6)" rx="2" ry="2" />
<text  x="594.89" y="463.5" >std::chrono::_V2::sys..</text>
</g>
<g >
<title>cv::VideoCapture::read (149,498,697 samples, 0.15%)</title><rect x="381.8" y="453" width="1.8" height="15.0" fill="rgb(209,38,34)" rx="2" ry="2" />
<text  x="384.82" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_sum_op&lt;float, float&gt;::packetOp&lt;float __vector (54,647,244 samples, 0.06%)</title><rect x="159.1" y="581" width="0.7" height="15.0" fill="rgb(205,81,50)" rx="2" ry="2" />
<text  x="162.15" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (182,266,472 samples, 0.18%)</title><rect x="370.0" y="181" width="2.2" height="15.0" fill="rgb(206,78,30)" rx="2" ry="2" />
<text  x="373.04" y="191.5" ></text>
</g>
<g >
<title>FacialRecogniser::detectAndDraw (454,703,766 samples, 0.46%)</title><rect x="1025.7" y="453" width="5.4" height="15.0" fill="rgb(251,159,22)" rx="2" ry="2" />
<text  x="1028.71" y="463.5" ></text>
</g>
<g >
<title>Eigen::MatrixBase&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; &gt;::operator+&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; &gt; (29,739,964 samples, 0.03%)</title><rect x="263.4" y="325" width="0.3" height="15.0" fill="rgb(226,210,39)" rx="2" ry="2" />
<text  x="266.37" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; &gt;::evaluator (55,092,167 samples, 0.06%)</title><rect x="197.5" y="277" width="0.6" height="15.0" fill="rgb(221,135,20)" rx="2" ry="2" />
<text  x="200.49" y="287.5" ></text>
</g>
<g >
<title>cv::cvtColorOnePlaneYUV2BGR (128,245,036 samples, 0.13%)</title><rect x="381.9" y="373" width="1.5" height="15.0" fill="rgb(253,181,32)" rx="2" ry="2" />
<text  x="384.87" y="383.5" ></text>
</g>
<g >
<title>[[heap]] (1,235,298,079 samples, 1.25%)</title><rect x="11.7" y="597" width="14.7" height="15.0" fill="rgb(253,159,50)" rx="2" ry="2" />
<text  x="14.70" y="607.5" ></text>
</g>
<g >
<title>gtk_widget_queue_draw (18,150,566 samples, 0.02%)</title><rect x="1003.0" y="421" width="0.2" height="15.0" fill="rgb(242,102,49)" rx="2" ry="2" />
<text  x="1006.02" y="431.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setZero (55,092,167 samples, 0.06%)</title><rect x="197.5" y="229" width="0.6" height="15.0" fill="rgb(237,215,25)" rx="2" ry="2" />
<text  x="200.49" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; &gt;::packet&lt;0, float __vector (837,919,094 samples, 0.85%)</title><rect x="316.2" y="181" width="10.0" height="15.0" fill="rgb(237,23,14)" rx="2" ry="2" />
<text  x="319.19" y="191.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::SparsePyrLKOpticalFlowImpl::calc (58,801,868 samples, 0.06%)</title><rect x="168.1" y="581" width="0.7" height="15.0" fill="rgb(229,181,45)" rx="2" ry="2" />
<text  x="171.09" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (9,876,006 samples, 0.01%)</title><rect x="124.1" y="517" width="0.1" height="15.0" fill="rgb(222,132,16)" rx="2" ry="2" />
<text  x="127.07" y="527.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;DataProcessor::log_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="549" width="185.9" height="15.0" fill="rgb(252,198,25)" rx="2" ry="2" />
<text  x="198.86" y="559.5" >std::thread::_State_impl..</text>
</g>
<g >
<title>cv::cvtColorBGR2Gray (37,695,187 samples, 0.04%)</title><rect x="383.6" y="437" width="0.5" height="15.0" fill="rgb(249,186,47)" rx="2" ry="2" />
<text  x="386.62" y="447.5" ></text>
</g>
<g >
<title>cvRunHaarClassifierCascadeSum (1,612,357,653 samples, 1.63%)</title><rect x="1143.7" y="485" width="19.2" height="15.0" fill="rgb(226,46,18)" rx="2" ry="2" />
<text  x="1146.68" y="495.5" ></text>
</g>
<g >
<title>getInput (691,699,063 samples, 0.70%)</title><rect x="381.8" y="485" width="8.2" height="15.0" fill="rgb(248,44,52)" rx="2" ry="2" />
<text  x="384.81" y="495.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (77,419,332 samples, 0.08%)</title><rect x="1003.3" y="165" width="0.9" height="15.0" fill="rgb(231,38,49)" rx="2" ry="2" />
<text  x="1006.28" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_quotient_op&lt;float, float&gt;::operator (10,986,109 samples, 0.01%)</title><rect x="204.3" y="277" width="0.2" height="15.0" fill="rgb(226,110,13)" rx="2" ry="2" />
<text  x="207.32" y="287.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="325" width="0.9" height="15.0" fill="rgb(219,214,7)" rx="2" ry="2" />
<text  x="1006.27" y="335.5" ></text>
</g>
<g >
<title>all (99,090,858,788 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(238,224,23)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>Eigen::numext::real&lt;float&gt; (55,010,988 samples, 0.06%)</title><rect x="261.0" y="229" width="0.7" height="15.0" fill="rgb(253,140,5)" rx="2" ry="2" />
<text  x="264.03" y="239.5" ></text>
</g>
<g >
<title>cv::cornerEigenValsVecs (15,340,767 samples, 0.02%)</title><rect x="1020.1" y="389" width="0.2" height="15.0" fill="rgb(218,62,51)" rx="2" ry="2" />
<text  x="1023.14" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl_base&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, Eigen::internal::generic_product_impl&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, Eigen::SelfAdjointShape, Eigen::DenseShape, 7&gt; &gt;::evalTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (4,716,854,145 samples, 4.76%)</title><rect x="205.5" y="309" width="56.2" height="15.0" fill="rgb(227,107,48)" rx="2" ry="2" />
<text  x="208.52" y="319.5" >Eigen..</text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::_set&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="421" width="0.1" height="15.0" fill="rgb(221,99,48)" rx="2" ry="2" />
<text  x="201.17" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;::~evaluator (9,969,019 samples, 0.01%)</title><rect x="379.3" y="197" width="0.1" height="15.0" fill="rgb(246,112,6)" rx="2" ry="2" />
<text  x="382.29" y="207.5" ></text>
</g>
<g >
<title>Eigen::fix&lt;1&gt; (43,529,038 samples, 0.04%)</title><rect x="10.7" y="597" width="0.5" height="15.0" fill="rgb(208,95,42)" rx="2" ry="2" />
<text  x="13.69" y="607.5" ></text>
</g>
<g >
<title>cvImageWidget_draw (346,034,780 samples, 0.35%)</title><rect x="1006.1" y="133" width="4.1" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="1009.12" y="143.5" ></text>
</g>
<g >
<title>Eigen::internal::assign_op&lt;float, float&gt;::assignPacket&lt;16, float __vector (14,866,445 samples, 0.02%)</title><rect x="196.3" y="309" width="0.2" height="15.0" fill="rgb(216,134,32)" rx="2" ry="2" />
<text  x="199.28" y="319.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (454,546,127 samples, 0.46%)</title><rect x="830.1" y="437" width="5.4" height="15.0" fill="rgb(216,143,52)" rx="2" ry="2" />
<text  x="833.11" y="447.5" ></text>
</g>
<g >
<title>g_object_notify (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="309" width="0.9" height="15.0" fill="rgb(228,126,42)" rx="2" ry="2" />
<text  x="1006.27" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (186,758,497 samples, 0.19%)</title><rect x="195.9" y="389" width="2.3" height="15.0" fill="rgb(232,224,36)" rx="2" ry="2" />
<text  x="198.95" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_constant_op&lt;float&gt;::packetOp&lt;float __vector (9,659,182 samples, 0.01%)</title><rect x="196.9" y="261" width="0.1" height="15.0" fill="rgb(237,104,1)" rx="2" ry="2" />
<text  x="199.88" y="271.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double, __gnu_cxx::__ops::_Iter_less_val&gt; (13,565,751 samples, 0.01%)</title><rect x="381.5" y="373" width="0.2" height="15.0" fill="rgb(205,171,46)" rx="2" ry="2" />
<text  x="384.54" y="383.5" ></text>
</g>
<g >
<title>gdk_cairo_set_source_pixbuf (325,253,588 samples, 0.33%)</title><rect x="1006.2" y="117" width="3.8" height="15.0" fill="rgb(210,19,51)" rx="2" ry="2" />
<text  x="1009.17" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::nullary_wrapper&lt;float, Eigen::internal::scalar_constant_op&lt;float&gt;, true, false, false&gt;::packetOp&lt;float __vector (612,188,037 samples, 0.62%)</title><rect x="318.9" y="165" width="7.2" height="15.0" fill="rgb(254,100,11)" rx="2" ry="2" />
<text  x="321.86" y="175.5" ></text>
</g>
<g >
<title>__libc_start_call_main (9,681,583 samples, 0.01%)</title><rect x="1181.6" y="565" width="0.1" height="15.0" fill="rgb(220,192,24)" rx="2" ry="2" />
<text  x="1184.63" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (103,631,532 samples, 0.10%)</title><rect x="150.3" y="581" width="1.3" height="15.0" fill="rgb(211,177,3)" rx="2" ry="2" />
<text  x="153.32" y="591.5" ></text>
</g>
<g >
<title>cvIntegral (36,917,797 samples, 0.04%)</title><rect x="1030.4" y="373" width="0.4" height="15.0" fill="rgb(206,123,13)" rx="2" ry="2" />
<text  x="1033.39" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt; (208,163,837 samples, 0.21%)</title><rect x="1185.1" y="581" width="2.5" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="1188.12" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="405" width="0.1" height="15.0" fill="rgb(239,131,9)" rx="2" ry="2" />
<text  x="201.17" y="415.5" ></text>
</g>
<g >
<title>Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt;::Block (47,845,454 samples, 0.05%)</title><rect x="262.5" y="293" width="0.6" height="15.0" fill="rgb(213,65,9)" rx="2" ry="2" />
<text  x="265.49" y="303.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (355,500,278 samples, 0.36%)</title><rect x="1006.0" y="197" width="4.3" height="15.0" fill="rgb(217,72,51)" rx="2" ry="2" />
<text  x="1009.05" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_max_op&lt;float, float, 0&gt;::packetOp&lt;float __vector (30,118,932 samples, 0.03%)</title><rect x="198.5" y="341" width="0.4" height="15.0" fill="rgb(232,128,24)" rx="2" ry="2" />
<text  x="201.51" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (2,473,620,907 samples, 2.50%)</title><rect x="307.9" y="197" width="29.5" height="15.0" fill="rgb(217,99,42)" rx="2" ry="2" />
<text  x="310.95" y="207.5" >Ei..</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (56,688,625 samples, 0.06%)</title><rect x="111.4" y="581" width="0.7" height="15.0" fill="rgb(208,201,3)" rx="2" ry="2" />
<text  x="114.41" y="591.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::updateTrackedPoints (47,128,334 samples, 0.05%)</title><rect x="170.2" y="437" width="0.5" height="15.0" fill="rgb(220,125,42)" rx="2" ry="2" />
<text  x="173.18" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (418,702,270 samples, 0.42%)</title><rect x="240.5" y="197" width="5.0" height="15.0" fill="rgb(240,195,53)" rx="2" ry="2" />
<text  x="243.51" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (15,218,114 samples, 0.02%)</title><rect x="1188.8" y="581" width="0.2" height="15.0" fill="rgb(220,212,7)" rx="2" ry="2" />
<text  x="1191.82" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::add_assign_op&lt;float, float&gt;::assignCoeff (75,715,652 samples, 0.08%)</title><rect x="377.3" y="197" width="0.9" height="15.0" fill="rgb(206,94,9)" rx="2" ry="2" />
<text  x="380.27" y="207.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (29,461,989 samples, 0.03%)</title><rect x="1189.2" y="597" width="0.3" height="15.0" fill="rgb(205,157,39)" rx="2" ry="2" />
<text  x="1192.15" y="607.5" ></text>
</g>
<g >
<title>run (9,681,583 samples, 0.01%)</title><rect x="1181.6" y="533" width="0.1" height="15.0" fill="rgb(239,10,10)" rx="2" ry="2" />
<text  x="1184.63" y="543.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (497,128,028 samples, 0.50%)</title><rect x="384.1" y="437" width="5.9" height="15.0" fill="rgb(218,129,37)" rx="2" ry="2" />
<text  x="387.11" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;::evaluator (19,711,374 samples, 0.02%)</title><rect x="378.7" y="133" width="0.2" height="15.0" fill="rgb(251,200,28)" rx="2" ry="2" />
<text  x="381.66" y="143.5" ></text>
</g>
<g >
<title>cv::imshow (498,517,074 samples, 0.50%)</title><rect x="998.4" y="469" width="5.9" height="15.0" fill="rgb(232,87,13)" rx="2" ry="2" />
<text  x="1001.41" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;::~evaluator (25,261,761 samples, 0.03%)</title><rect x="379.2" y="245" width="0.3" height="15.0" fill="rgb(220,78,45)" rx="2" ry="2" />
<text  x="382.23" y="255.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (10,478,300 samples, 0.01%)</title><rect x="1141.1" y="485" width="0.1" height="15.0" fill="rgb(223,186,33)" rx="2" ry="2" />
<text  x="1144.08" y="495.5" ></text>
</g>
<g >
<title>Eigen::internal::unaligned_dense_assignment_loop&lt;false&gt;::run&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt; &gt; (112,575,402 samples, 0.11%)</title><rect x="377.1" y="229" width="1.4" height="15.0" fill="rgb(241,73,52)" rx="2" ry="2" />
<text  x="380.12" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::shared_ptr (221,264,598 samples, 0.22%)</title><rect x="900.7" y="453" width="2.7" height="15.0" fill="rgb(215,94,11)" rx="2" ry="2" />
<text  x="903.72" y="463.5" ></text>
</g>
<g >
<title>cairo_surface_create_similar_image (32,951,811 samples, 0.03%)</title><rect x="1009.7" y="101" width="0.3" height="15.0" fill="rgb(229,98,32)" rx="2" ry="2" />
<text  x="1012.65" y="111.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Dense2Triangular, void&gt;::run (265,756,219 samples, 0.27%)</title><rect x="202.1" y="357" width="3.2" height="15.0" fill="rgb(228,80,3)" rx="2" ry="2" />
<text  x="205.09" y="367.5" ></text>
</g>
<g >
<title>_dl_start (47,637,096 samples, 0.05%)</title><rect x="1181.7" y="581" width="0.6" height="15.0" fill="rgb(240,119,36)" rx="2" ry="2" />
<text  x="1184.75" y="591.5" ></text>
</g>
<g >
<title>icvXMLSkipSpaces (12,459,485 samples, 0.01%)</title><rect x="169.8" y="565" width="0.2" height="15.0" fill="rgb(232,10,30)" rx="2" ry="2" />
<text  x="172.83" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (75,787,758 samples, 0.08%)</title><rect x="33.4" y="581" width="0.9" height="15.0" fill="rgb(207,182,54)" rx="2" ry="2" />
<text  x="36.40" y="591.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop_head (4,460,067,582 samples, 4.50%)</title><rect x="490.5" y="437" width="53.2" height="15.0" fill="rgb(230,159,15)" rx="2" ry="2" />
<text  x="493.55" y="447.5" >lock_..</text>
</g>
<g >
<title>__GI___sched_yield (199,829,025 samples, 0.20%)</title><rect x="1135.5" y="533" width="2.4" height="15.0" fill="rgb(217,25,23)" rx="2" ry="2" />
<text  x="1138.52" y="543.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::SparsePyrLKOpticalFlowImpl::calc (47,128,334 samples, 0.05%)</title><rect x="170.2" y="405" width="0.5" height="15.0" fill="rgb(252,167,21)" rx="2" ry="2" />
<text  x="173.18" y="415.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (221,408,335 samples, 0.22%)</title><rect x="803.7" y="453" width="2.6" height="15.0" fill="rgb(205,4,50)" rx="2" ry="2" />
<text  x="806.66" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::ploadu&lt;float __vector (151,059,223 samples, 0.15%)</title><rect x="330.2" y="165" width="1.8" height="15.0" fill="rgb(231,18,21)" rx="2" ry="2" />
<text  x="333.18" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (37,636,693 samples, 0.04%)</title><rect x="151.6" y="581" width="0.5" height="15.0" fill="rgb(224,185,28)" rx="2" ry="2" />
<text  x="154.63" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (115,507,886 samples, 0.12%)</title><rect x="154.5" y="581" width="1.4" height="15.0" fill="rgb(207,172,38)" rx="2" ry="2" />
<text  x="157.51" y="591.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (14,856,293 samples, 0.01%)</title><rect x="1004.7" y="325" width="0.2" height="15.0" fill="rgb(207,34,39)" rx="2" ry="2" />
<text  x="1007.69" y="335.5" ></text>
</g>
<g >
<title>cv::pyrDown (47,128,334 samples, 0.05%)</title><rect x="170.2" y="373" width="0.5" height="15.0" fill="rgb(212,183,32)" rx="2" ry="2" />
<text  x="173.18" y="383.5" ></text>
</g>
<g >
<title>cv::integral (36,917,797 samples, 0.04%)</title><rect x="1030.4" y="357" width="0.4" height="15.0" fill="rgb(222,2,31)" rx="2" ry="2" />
<text  x="1033.39" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::tridiagonalization_inplace&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (14,785,448,419 samples, 14.92%)</title><rect x="205.3" y="373" width="176.0" height="15.0" fill="rgb(240,75,29)" rx="2" ry="2" />
<text  x="208.25" y="383.5" >Eigen::internal::tridi..</text>
</g>
<g >
<title>std::atomic&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::node*&gt;::load (451,786,703 samples, 0.46%)</title><rect x="66.7" y="581" width="5.3" height="15.0" fill="rgb(217,129,19)" rx="2" ry="2" />
<text  x="69.66" y="591.5" ></text>
</g>
<g >
<title>icv_k0_ownsCopy_8u_repE9 (58,730,184 samples, 0.06%)</title><rect x="1187.8" y="597" width="0.7" height="15.0" fill="rgb(214,205,20)" rx="2" ry="2" />
<text  x="1190.80" y="607.5" ></text>
</g>
<g >
<title>cvHaarDetectObjectsForROC (454,168,661 samples, 0.46%)</title><rect x="1025.7" y="389" width="5.4" height="15.0" fill="rgb(230,152,3)" rx="2" ry="2" />
<text  x="1028.72" y="399.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (13,196,339,842 samples, 13.32%)</title><rect x="602.9" y="437" width="157.1" height="15.0" fill="rgb(207,74,53)" rx="2" ry="2" />
<text  x="605.90" y="447.5" >__GI___clock_gettime</text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::operator (778,024,330 samples, 0.79%)</title><rect x="1010.8" y="485" width="9.2" height="15.0" fill="rgb(215,7,52)" rx="2" ry="2" />
<text  x="1013.78" y="495.5" ></text>
</g>
<g >
<title>Eigen::BlockImpl&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false, Eigen::Dense&gt;::BlockImpl (24,280,292 samples, 0.02%)</title><rect x="262.0" y="277" width="0.3" height="15.0" fill="rgb(219,36,26)" rx="2" ry="2" />
<text  x="265.02" y="287.5" ></text>
</g>
<g >
<title>cv::TLSDataContainer::getData (20,899,265 samples, 0.02%)</title><rect x="1181.2" y="485" width="0.3" height="15.0" fill="rgb(242,108,32)" rx="2" ry="2" />
<text  x="1184.22" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (248,935,925 samples, 0.25%)</title><rect x="181.4" y="581" width="3.0" height="15.0" fill="rgb(254,18,16)" rx="2" ry="2" />
<text  x="184.44" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (42,605,792 samples, 0.04%)</title><rect x="146.7" y="565" width="0.5" height="15.0" fill="rgb(247,215,39)" rx="2" ry="2" />
<text  x="149.72" y="575.5" ></text>
</g>
<g >
<title>_dl_start_final (47,559,391 samples, 0.05%)</title><rect x="1181.7" y="565" width="0.6" height="15.0" fill="rgb(232,62,17)" rx="2" ry="2" />
<text  x="1184.75" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;, 3, 0&gt;::run (129,249,126 samples, 0.13%)</title><rect x="195.9" y="341" width="1.6" height="15.0" fill="rgb(218,152,1)" rx="2" ry="2" />
<text  x="198.95" y="351.5" ></text>
</g>
<g >
<title>gtk_container_propagate_draw (356,267,310 samples, 0.36%)</title><rect x="1006.0" y="213" width="4.3" height="15.0" fill="rgb(224,81,24)" rx="2" ry="2" />
<text  x="1009.05" y="223.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (3,658,417,476 samples, 3.69%)</title><rect x="1137.9" y="533" width="43.6" height="15.0" fill="rgb(232,5,50)" rx="2" ry="2" />
<text  x="1140.95" y="543.5" >cv::..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (235,711,701 samples, 0.24%)</title><rect x="1182.3" y="581" width="2.8" height="15.0" fill="rgb(218,65,21)" rx="2" ry="2" />
<text  x="1185.31" y="591.5" ></text>
</g>
<g >
<title>cv::hal::opt_AVX2::cvtOnePlaneYUVtoBGR (125,065,712 samples, 0.13%)</title><rect x="381.9" y="341" width="1.5" height="15.0" fill="rgb(240,171,6)" rx="2" ry="2" />
<text  x="384.91" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::acc (35,295,738 samples, 0.04%)</title><rect x="121.6" y="549" width="0.4" height="15.0" fill="rgb(210,224,49)" rx="2" ry="2" />
<text  x="124.59" y="559.5" ></text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (73,392,018 samples, 0.07%)</title><rect x="252.8" y="229" width="0.9" height="15.0" fill="rgb(239,13,49)" rx="2" ry="2" />
<text  x="255.83" y="239.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (15,948,194 samples, 0.02%)</title><rect x="383.9" y="357" width="0.1" height="15.0" fill="rgb(234,27,5)" rx="2" ry="2" />
<text  x="386.86" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::~shared_ptr (2,121,322,617 samples, 2.14%)</title><rect x="903.4" y="453" width="25.2" height="15.0" fill="rgb(228,6,16)" rx="2" ry="2" />
<text  x="906.36" y="463.5" >s..</text>
</g>
<g >
<title>DataTransformers::apply_cublic_spline_to_matrix (31,296,129 samples, 0.03%)</title><rect x="381.4" y="453" width="0.4" height="15.0" fill="rgb(213,206,44)" rx="2" ry="2" />
<text  x="384.40" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (489,531,521 samples, 0.49%)</title><rect x="175.6" y="581" width="5.8" height="15.0" fill="rgb(229,94,28)" rx="2" ry="2" />
<text  x="178.61" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::~Data (22,546,199 samples, 0.02%)</title><rect x="379.3" y="213" width="0.2" height="15.0" fill="rgb(213,222,24)" rx="2" ry="2" />
<text  x="382.26" y="223.5" ></text>
</g>
<g >
<title>std::atomic&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::node*&gt;::load (407,743,883 samples, 0.41%)</title><rect x="545.4" y="437" width="4.9" height="15.0" fill="rgb(229,31,38)" rx="2" ry="2" />
<text  x="548.40" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::triangular_assignment_loop&lt;Eigen::internal::triangular_dense_assignment_kernel&lt;1, 0, 0, Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;, 1u, -1, false&gt;::run (262,100,202 samples, 0.26%)</title><rect x="202.1" y="325" width="3.2" height="15.0" fill="rgb(237,202,25)" rx="2" ry="2" />
<text  x="205.13" y="335.5" ></text>
</g>
<g >
<title>icvXMLParseValue (47,084,838 samples, 0.05%)</title><rect x="169.5" y="581" width="0.6" height="15.0" fill="rgb(212,66,7)" rx="2" ry="2" />
<text  x="172.54" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pset1&lt;float __vector (105,050,824 samples, 0.11%)</title><rect x="37.1" y="581" width="1.3" height="15.0" fill="rgb(230,115,47)" rx="2" ry="2" />
<text  x="40.11" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (258,045,223 samples, 0.26%)</title><rect x="599.8" y="437" width="3.1" height="15.0" fill="rgb(233,100,18)" rx="2" ry="2" />
<text  x="602.83" y="447.5" ></text>
</g>
<g >
<title>[unknown] (7,404,344,299 samples, 7.47%)</title><rect x="107.7" y="597" width="88.2" height="15.0" fill="rgb(239,123,29)" rx="2" ry="2" />
<text  x="110.68" y="607.5" >[unknown]</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, DataProcessor*, false&gt;::_M_head (224,286,274 samples, 0.23%)</title><rect x="995.5" y="373" width="2.6" height="15.0" fill="rgb(243,227,39)" rx="2" ry="2" />
<text  x="998.45" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;, 0, 0&gt;::run (8,815,242 samples, 0.01%)</title><rect x="198.2" y="325" width="0.1" height="15.0" fill="rgb(208,116,16)" rx="2" ry="2" />
<text  x="201.17" y="335.5" ></text>
</g>
<g >
<title>cv::calcOpticalFlowPyrLK (410,816,716 samples, 0.41%)</title><rect x="1020.7" y="421" width="4.9" height="15.0" fill="rgb(230,46,46)" rx="2" ry="2" />
<text  x="1023.69" y="431.5" ></text>
</g>
<g >
<title>[libgobject-2.0.so.0.7200.4] (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="245" width="0.9" height="15.0" fill="rgb(248,60,10)" rx="2" ry="2" />
<text  x="1006.27" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::operator (4,645,395,166 samples, 4.69%)</title><rect x="943.0" y="469" width="55.3" height="15.0" fill="rgb(212,65,17)" rx="2" ry="2" />
<text  x="946.03" y="479.5" >std::..</text>
</g>
<g >
<title>std::__shared_count&lt; (206,677,546 samples, 0.21%)</title><rect x="55.3" y="581" width="2.4" height="15.0" fill="rgb(214,195,6)" rx="2" ry="2" />
<text  x="58.27" y="591.5" ></text>
</g>
<g >
<title>std::__fill_a1&lt;float*, float&gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="37" width="0.6" height="15.0" fill="rgb(214,32,2)" rx="2" ry="2" />
<text  x="200.49" y="47.5" ></text>
</g>
<g >
<title>Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt;::CwiseNullaryOp (11,777,519 samples, 0.01%)</title><rect x="381.1" y="309" width="0.1" height="15.0" fill="rgb(224,38,48)" rx="2" ry="2" />
<text  x="384.09" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (174,638,786 samples, 0.18%)</title><rect x="335.3" y="165" width="2.1" height="15.0" fill="rgb(216,129,0)" rx="2" ry="2" />
<text  x="338.32" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::variable_if_dynamic&lt;long, 1&gt;::value (61,110,592 samples, 0.06%)</title><rect x="332.0" y="165" width="0.7" height="15.0" fill="rgb(223,100,38)" rx="2" ry="2" />
<text  x="334.98" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 1, false, float, 0, false, 0, 1&gt;::run (2,384,097,743 samples, 2.41%)</title><rect x="118.9" y="581" width="28.3" height="15.0" fill="rgb(225,16,29)" rx="2" ry="2" />
<text  x="121.86" y="591.5" >Ei..</text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="101" width="0.6" height="15.0" fill="rgb(218,169,27)" rx="2" ry="2" />
<text  x="200.49" y="111.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::rows (13,663,128 samples, 0.01%)</title><rect x="201.0" y="245" width="0.1" height="15.0" fill="rgb(231,35,25)" rx="2" ry="2" />
<text  x="203.98" y="255.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (104,992,456 samples, 0.11%)</title><rect x="382.1" y="261" width="1.3" height="15.0" fill="rgb(246,48,54)" rx="2" ry="2" />
<text  x="385.12" y="271.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="213" width="0.9" height="15.0" fill="rgb(254,19,30)" rx="2" ry="2" />
<text  x="1006.27" y="223.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (13,481,264 samples, 0.01%)</title><rect x="10.5" y="581" width="0.2" height="15.0" fill="rgb(229,163,15)" rx="2" ry="2" />
<text  x="13.53" y="591.5" ></text>
</g>
<g >
<title>cv::CascadeClassifierImpl::detectMultiScale (454,703,766 samples, 0.46%)</title><rect x="1025.7" y="421" width="5.4" height="15.0" fill="rgb(229,181,44)" rx="2" ry="2" />
<text  x="1028.71" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (184,425,632 samples, 0.19%)</title><rect x="144.0" y="533" width="2.2" height="15.0" fill="rgb(211,224,41)" rx="2" ry="2" />
<text  x="146.96" y="543.5" ></text>
</g>
<g >
<title>gtk_widget_queue_draw_area (16,295,947 samples, 0.02%)</title><rect x="1003.0" y="405" width="0.2" height="15.0" fill="rgb(216,69,53)" rx="2" ry="2" />
<text  x="1006.05" y="415.5" ></text>
</g>
<g >
<title>cv::equalizeHist (499,467,326 samples, 0.50%)</title><rect x="384.1" y="453" width="5.9" height="15.0" fill="rgb(234,172,47)" rx="2" ry="2" />
<text  x="387.08" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (231,184,243 samples, 0.23%)</title><rect x="41.9" y="581" width="2.8" height="15.0" fill="rgb(214,31,30)" rx="2" ry="2" />
<text  x="44.91" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (52,248,004 samples, 0.05%)</title><rect x="266.4" y="229" width="0.6" height="15.0" fill="rgb(219,75,45)" rx="2" ry="2" />
<text  x="269.37" y="239.5" ></text>
</g>
<g >
<title>gdk_display_get_event (15,559,147 samples, 0.02%)</title><rect x="1004.7" y="341" width="0.2" height="15.0" fill="rgb(254,1,19)" rx="2" ry="2" />
<text  x="1007.69" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::pset1&lt;float __vector (194,000,191 samples, 0.20%)</title><rect x="323.8" y="133" width="2.3" height="15.0" fill="rgb(215,112,35)" rx="2" ry="2" />
<text  x="326.84" y="143.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::trackPoints (47,128,334 samples, 0.05%)</title><rect x="170.2" y="453" width="0.5" height="15.0" fill="rgb(234,210,27)" rx="2" ry="2" />
<text  x="173.18" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeff (14,576,434 samples, 0.01%)</title><rect x="200.5" y="245" width="0.1" height="15.0" fill="rgb(235,158,18)" rx="2" ry="2" />
<text  x="203.46" y="255.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt; (186,758,497 samples, 0.19%)</title><rect x="195.9" y="421" width="2.3" height="15.0" fill="rgb(210,154,34)" rx="2" ry="2" />
<text  x="198.95" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt;, 3, 0&gt;::run (9,597,721,694 samples, 9.69%)</title><rect x="264.2" y="245" width="114.3" height="15.0" fill="rgb(250,70,44)" rx="2" ry="2" />
<text  x="267.17" y="255.5" >Eigen::interna..</text>
</g>
<g >
<title>g_main_context_dispatch (495,856,095 samples, 0.50%)</title><rect x="1004.7" y="373" width="5.9" height="15.0" fill="rgb(205,106,49)" rx="2" ry="2" />
<text  x="1007.67" y="383.5" ></text>
</g>
<g >
<title>[unknown] (56,701,001 samples, 0.06%)</title><rect x="1137.2" y="517" width="0.7" height="15.0" fill="rgb(238,117,11)" rx="2" ry="2" />
<text  x="1140.22" y="527.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (58,801,868 samples, 0.06%)</title><rect x="168.1" y="517" width="0.7" height="15.0" fill="rgb(252,203,46)" rx="2" ry="2" />
<text  x="171.09" y="527.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (39,631,931 samples, 0.04%)</title><rect x="1181.8" y="469" width="0.5" height="15.0" fill="rgb(246,182,21)" rx="2" ry="2" />
<text  x="1184.84" y="479.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (25,878,465 samples, 0.03%)</title><rect x="890.5" y="405" width="0.3" height="15.0" fill="rgb(247,109,5)" rx="2" ry="2" />
<text  x="893.53" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::packet&lt;16, float __vector (12,726,641 samples, 0.01%)</title><rect x="199.1" y="325" width="0.1" height="15.0" fill="rgb(217,117,40)" rx="2" ry="2" />
<text  x="202.05" y="335.5" ></text>
</g>
<g >
<title>cv::ThreadPool::run (496,326,633 samples, 0.50%)</title><rect x="384.1" y="421" width="5.9" height="15.0" fill="rgb(209,191,29)" rx="2" ry="2" />
<text  x="387.12" y="431.5" ></text>
</g>
<g >
<title>cv::pyrDown_&lt;cv::FixPtCast&lt;unsigned char, 8&gt; &gt; (58,801,868 samples, 0.06%)</title><rect x="168.1" y="533" width="0.7" height="15.0" fill="rgb(224,17,47)" rx="2" ry="2" />
<text  x="171.09" y="543.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (106,867,949 samples, 0.11%)</title><rect x="364.3" y="165" width="1.3" height="15.0" fill="rgb(216,67,17)" rx="2" ry="2" />
<text  x="367.35" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::ploadu&lt;float __vector (141,937,724 samples, 0.14%)</title><rect x="359.2" y="165" width="1.7" height="15.0" fill="rgb(222,193,42)" rx="2" ry="2" />
<text  x="362.23" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;16, float __vector (78,534,113 samples, 0.08%)</title><rect x="196.5" y="309" width="0.9" height="15.0" fill="rgb(211,105,29)" rx="2" ry="2" />
<text  x="199.46" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::BlockImpl_dense&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false, true&gt;::BlockImpl_dense (22,451,622 samples, 0.02%)</title><rect x="262.0" y="261" width="0.3" height="15.0" fill="rgb(226,143,31)" rx="2" ry="2" />
<text  x="265.04" y="271.5" ></text>
</g>
<g >
<title>__clone3 (82,777,929,893 samples, 83.54%)</title><rect x="195.9" y="597" width="985.7" height="15.0" fill="rgb(219,171,41)" rx="2" ry="2" />
<text  x="198.86" y="607.5" >__clone3</text>
</g>
<g >
<title>g_signal_emit_valist (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="261" width="0.9" height="15.0" fill="rgb(254,186,38)" rx="2" ry="2" />
<text  x="1006.27" y="271.5" ></text>
</g>
<g >
<title>Eigen::internal::tridiagonalization_inplace_selector&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, false&gt;::run&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (14,785,448,419 samples, 14.92%)</title><rect x="205.3" y="389" width="176.0" height="15.0" fill="rgb(208,218,23)" rx="2" ry="2" />
<text  x="208.25" y="399.5" >Eigen::internal::tridi..</text>
</g>
<g >
<title>gdk_window_begin_draw_frame (30,681,138 samples, 0.03%)</title><rect x="1005.4" y="245" width="0.4" height="15.0" fill="rgb(244,179,5)" rx="2" ry="2" />
<text  x="1008.43" y="255.5" ></text>
</g>
<g >
<title>Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;::CwiseBinaryOp (9,914,514 samples, 0.01%)</title><rect x="381.0" y="309" width="0.1" height="15.0" fill="rgb(220,160,47)" rx="2" ry="2" />
<text  x="383.98" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_if&lt;false&gt;::pconj&lt;float __vector (246,268,174 samples, 0.25%)</title><rect x="227.2" y="213" width="2.9" height="15.0" fill="rgb(246,7,2)" rx="2" ry="2" />
<text  x="230.22" y="223.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (15,041,380 samples, 0.02%)</title><rect x="383.9" y="341" width="0.1" height="15.0" fill="rgb(233,76,41)" rx="2" ry="2" />
<text  x="386.87" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::binary_evaluator (55,092,167 samples, 0.06%)</title><rect x="197.5" y="325" width="0.6" height="15.0" fill="rgb(240,68,30)" rx="2" ry="2" />
<text  x="200.49" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::pstore&lt;float, float __vector (122,571,050 samples, 0.12%)</title><rect x="259.6" y="229" width="1.4" height="15.0" fill="rgb(246,195,19)" rx="2" ry="2" />
<text  x="262.56" y="239.5" ></text>
</g>
<g >
<title>g_signal_emit_valist (469,107,174 samples, 0.47%)</title><rect x="1005.0" y="309" width="5.5" height="15.0" fill="rgb(242,102,8)" rx="2" ry="2" />
<text  x="1007.95" y="319.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (352,683,729 samples, 0.36%)</title><rect x="1006.1" y="149" width="4.2" height="15.0" fill="rgb(243,4,19)" rx="2" ry="2" />
<text  x="1009.06" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::ploadu&lt;float __vector (9,136,282 samples, 0.01%)</title><rect x="146.2" y="549" width="0.1" height="15.0" fill="rgb(231,25,18)" rx="2" ry="2" />
<text  x="149.22" y="559.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (265,756,219 samples, 0.27%)</title><rect x="202.1" y="373" width="3.2" height="15.0" fill="rgb(247,95,22)" rx="2" ry="2" />
<text  x="205.09" y="383.5" ></text>
</g>
<g >
<title>Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;::outerStride (9,930,454 samples, 0.01%)</title><rect x="262.9" y="229" width="0.1" height="15.0" fill="rgb(254,23,29)" rx="2" ry="2" />
<text  x="265.92" y="239.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (361,397,787 samples, 0.36%)</title><rect x="1006.0" y="229" width="4.3" height="15.0" fill="rgb(247,111,14)" rx="2" ry="2" />
<text  x="1008.99" y="239.5" ></text>
</g>
<g >
<title>cv::ThreadPool::run (364,233,923 samples, 0.37%)</title><rect x="1026.1" y="357" width="4.3" height="15.0" fill="rgb(246,2,44)" rx="2" ry="2" />
<text  x="1029.05" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_if&lt;false&gt;::pconj&lt;float __vector (86,354,716 samples, 0.09%)</title><rect x="140.2" y="517" width="1.0" height="15.0" fill="rgb(245,205,20)" rx="2" ry="2" />
<text  x="143.20" y="527.5" ></text>
</g>
<g >
<title>Eigen::MatrixBase&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;::operator+=&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt; (9,818,075,961 samples, 9.91%)</title><rect x="263.7" y="325" width="116.9" height="15.0" fill="rgb(216,150,6)" rx="2" ry="2" />
<text  x="266.73" y="335.5" >Eigen::MatrixB..</text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (58,801,868 samples, 0.06%)</title><rect x="168.1" y="469" width="0.7" height="15.0" fill="rgb(213,32,50)" rx="2" ry="2" />
<text  x="171.09" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; &gt;::packet&lt;0, float __vector (109,495,180 samples, 0.11%)</title><rect x="116.6" y="581" width="1.3" height="15.0" fill="rgb(245,191,53)" rx="2" ry="2" />
<text  x="119.64" y="591.5" ></text>
</g>
<g >
<title>start_thread (82,777,906,000 samples, 83.54%)</title><rect x="195.9" y="581" width="985.7" height="15.0" fill="rgb(231,35,38)" rx="2" ry="2" />
<text  x="198.86" y="591.5" >start_thread</text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::operator=&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="389" width="2.5" height="15.0" fill="rgb(222,82,8)" rx="2" ry="2" />
<text  x="202.58" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (64,679,217 samples, 0.07%)</title><rect x="112.8" y="581" width="0.7" height="15.0" fill="rgb(248,24,50)" rx="2" ry="2" />
<text  x="115.78" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;::evaluator (64,534,027 samples, 0.07%)</title><rect x="378.5" y="245" width="0.7" height="15.0" fill="rgb(214,34,12)" rx="2" ry="2" />
<text  x="381.46" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (54,557,615,719 samples, 55.06%)</title><rect x="381.8" y="501" width="649.7" height="15.0" fill="rgb(234,75,29)" rx="2" ry="2" />
<text  x="384.79" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>DataTransformers::apply_cubic_spline (31,296,129 samples, 0.03%)</title><rect x="381.4" y="405" width="0.4" height="15.0" fill="rgb(215,61,45)" rx="2" ry="2" />
<text  x="384.40" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (58,580,017 samples, 0.06%)</title><rect x="147.3" y="581" width="0.7" height="15.0" fill="rgb(251,134,16)" rx="2" ry="2" />
<text  x="150.26" y="591.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::rows (12,813,789 samples, 0.01%)</title><rect x="205.1" y="277" width="0.1" height="15.0" fill="rgb(225,43,39)" rx="2" ry="2" />
<text  x="208.09" y="287.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (81,380,331 samples, 0.08%)</title><rect x="389.1" y="405" width="0.9" height="15.0" fill="rgb(254,106,15)" rx="2" ry="2" />
<text  x="392.05" y="415.5" ></text>
</g>
<g >
<title>[libgobject-2.0.so.0.7200.4] (13,574,233 samples, 0.01%)</title><rect x="1010.1" y="69" width="0.1" height="15.0" fill="rgb(249,99,28)" rx="2" ry="2" />
<text  x="1013.07" y="79.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;::evaluator (32,245,174 samples, 0.03%)</title><rect x="378.6" y="197" width="0.4" height="15.0" fill="rgb(222,48,27)" rx="2" ry="2" />
<text  x="381.59" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::~binary_evaluator (8,983,195 samples, 0.01%)</title><rect x="379.4" y="165" width="0.1" height="15.0" fill="rgb(251,90,49)" rx="2" ry="2" />
<text  x="382.42" y="175.5" ></text>
</g>
<g >
<title>icv_k0_ownsCopy_8u_inv (10,175,783 samples, 0.01%)</title><rect x="1187.7" y="597" width="0.1" height="15.0" fill="rgb(222,176,42)" rx="2" ry="2" />
<text  x="1190.67" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6,658,983,927 samples, 6.72%)</title><rect x="806.3" y="453" width="79.3" height="15.0" fill="rgb(254,47,0)" rx="2" ry="2" />
<text  x="809.30" y="463.5" >std::chro..</text>
</g>
<g >
<title>g_object_new_valist (16,286,637 samples, 0.02%)</title><rect x="1010.0" y="85" width="0.2" height="15.0" fill="rgb(237,96,34)" rx="2" ry="2" />
<text  x="1013.05" y="95.5" ></text>
</g>
<g >
<title>Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;::Matrix&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt; (186,758,497 samples, 0.19%)</title><rect x="195.9" y="437" width="2.3" height="15.0" fill="rgb(206,220,17)" rx="2" ry="2" />
<text  x="198.95" y="447.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2,489,362,868 samples, 2.51%)</title><rect x="769.2" y="437" width="29.7" height="15.0" fill="rgb(222,219,15)" rx="2" ry="2" />
<text  x="772.22" y="447.5" >st..</text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="341" width="2.5" height="15.0" fill="rgb(211,187,21)" rx="2" ry="2" />
<text  x="202.58" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (41,419,292 samples, 0.04%)</title><rect x="148.0" y="581" width="0.5" height="15.0" fill="rgb(214,163,40)" rx="2" ry="2" />
<text  x="150.97" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::ploadu&lt;float __vector (480,790,045 samples, 0.49%)</title><rect x="253.7" y="229" width="5.7" height="15.0" fill="rgb(224,79,26)" rx="2" ry="2" />
<text  x="256.70" y="239.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (223,569,776 samples, 0.23%)</title><rect x="14.8" y="581" width="2.7" height="15.0" fill="rgb(240,34,23)" rx="2" ry="2" />
<text  x="17.82" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;::coeff&lt;long&gt; (34,794,760 samples, 0.04%)</title><rect x="203.6" y="277" width="0.4" height="15.0" fill="rgb(222,47,17)" rx="2" ry="2" />
<text  x="206.56" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, DataProcessor*, false&gt;::_M_head (205,810,007 samples, 0.21%)</title><rect x="47.3" y="581" width="2.4" height="15.0" fill="rgb(252,26,16)" rx="2" ry="2" />
<text  x="50.30" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::plainobjectbase_evaluator_data&lt;float, -1&gt;::outerStride (17,239,101 samples, 0.02%)</title><rect x="33.2" y="581" width="0.2" height="15.0" fill="rgb(209,202,8)" rx="2" ry="2" />
<text  x="36.19" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::selfadjoint_matrix_vector_product&lt;float, long, 0, 1, false, false, 0&gt;::run (4,578,665,454 samples, 4.62%)</title><rect x="207.2" y="245" width="54.5" height="15.0" fill="rgb(236,147,30)" rx="2" ry="2" />
<text  x="210.17" y="255.5" >Eigen..</text>
</g>
<g >
<title>cv::parallel_for_ (15,788,986 samples, 0.02%)</title><rect x="169.0" y="549" width="0.2" height="15.0" fill="rgb(250,29,11)" rx="2" ry="2" />
<text  x="171.97" y="559.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,430,092,590 samples, 3.46%)</title><rect x="838.3" y="437" width="40.9" height="15.0" fill="rgb(243,67,45)" rx="2" ry="2" />
<text  x="841.31" y="447.5" >std..</text>
</g>
<g >
<title>cv::hal::opt_AVX2::(anonymous namespace)::cvtYUV422toRGB&lt;0, 0, 0, 3&gt; (125,065,712 samples, 0.13%)</title><rect x="381.9" y="325" width="1.5" height="15.0" fill="rgb(210,145,40)" rx="2" ry="2" />
<text  x="384.91" y="335.5" ></text>
</g>
<g >
<title>cv::PyrDownVecV&lt;int, unsigned char&gt; (64,977,398 samples, 0.07%)</title><rect x="1165.2" y="485" width="0.8" height="15.0" fill="rgb(226,176,26)" rx="2" ry="2" />
<text  x="1168.22" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (146,370,579 samples, 0.15%)</title><rect x="543.7" y="437" width="1.7" height="15.0" fill="rgb(237,138,5)" rx="2" ry="2" />
<text  x="546.66" y="447.5" ></text>
</g>
<g >
<title>g_signal_emit (353,500,682 samples, 0.36%)</title><rect x="1006.1" y="181" width="4.2" height="15.0" fill="rgb(249,153,1)" rx="2" ry="2" />
<text  x="1009.06" y="191.5" ></text>
</g>
<g >
<title>cv::CascadeClassifier::detectMultiScale (454,703,766 samples, 0.46%)</title><rect x="1025.7" y="437" width="5.4" height="15.0" fill="rgb(250,94,51)" rx="2" ry="2" />
<text  x="1028.71" y="447.5" ></text>
</g>
<g >
<title>_start (57,319,564 samples, 0.06%)</title><rect x="1181.6" y="597" width="0.7" height="15.0" fill="rgb(245,131,40)" rx="2" ry="2" />
<text  x="1184.63" y="607.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_abs_op&lt;float&gt;::packetOp&lt;float __vector (26,584,039 samples, 0.03%)</title><rect x="199.2" y="325" width="0.3" height="15.0" fill="rgb(236,111,49)" rx="2" ry="2" />
<text  x="202.21" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::rows (20,488,167 samples, 0.02%)</title><rect x="200.9" y="261" width="0.2" height="15.0" fill="rgb(217,218,45)" rx="2" ry="2" />
<text  x="203.89" y="271.5" ></text>
</g>
<g >
<title>cv::detail::LKTrackerInvoker::operator (422,400,727 samples, 0.43%)</title><rect x="1166.2" y="501" width="5.0" height="15.0" fill="rgb(234,223,10)" rx="2" ry="2" />
<text  x="1169.16" y="511.5" ></text>
</g>
<g >
<title>[anon] (6,821,359,159 samples, 6.88%)</title><rect x="26.4" y="597" width="81.3" height="15.0" fill="rgb(242,11,4)" rx="2" ry="2" />
<text  x="29.43" y="607.5" >[anon]</text>
</g>
<g >
<title>std::__shared_count&lt; (189,553,025 samples, 0.19%)</title><rect x="170.8" y="581" width="2.2" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="173.77" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeffRef (23,870,532 samples, 0.02%)</title><rect x="204.5" y="293" width="0.3" height="15.0" fill="rgb(219,169,37)" rx="2" ry="2" />
<text  x="207.51" y="303.5" ></text>
</g>
<g >
<title>trackHead (960,033,728 samples, 0.97%)</title><rect x="1020.0" y="485" width="11.5" height="15.0" fill="rgb(221,28,44)" rx="2" ry="2" />
<text  x="1023.04" y="495.5" ></text>
</g>
<g >
<title>Eigen::internal::QuadPacket&lt;float __vector (76,030,897 samples, 0.08%)</title><rect x="134.1" y="533" width="0.9" height="15.0" fill="rgb(248,147,7)" rx="2" ry="2" />
<text  x="137.08" y="543.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; &gt;::evaluator (9,865,601 samples, 0.01%)</title><rect x="379.0" y="117" width="0.1" height="15.0" fill="rgb(207,101,38)" rx="2" ry="2" />
<text  x="382.03" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="165" width="0.6" height="15.0" fill="rgb(225,211,24)" rx="2" ry="2" />
<text  x="200.49" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeffRef (11,849,716 samples, 0.01%)</title><rect x="200.6" y="245" width="0.2" height="15.0" fill="rgb(234,203,44)" rx="2" ry="2" />
<text  x="203.63" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (674,181,178 samples, 0.68%)</title><rect x="135.0" y="533" width="8.0" height="15.0" fill="rgb(208,75,4)" rx="2" ry="2" />
<text  x="137.99" y="543.5" ></text>
</g>
<g >
<title>cv::ThreadPool::run (58,801,868 samples, 0.06%)</title><rect x="168.1" y="501" width="0.7" height="15.0" fill="rgb(238,26,1)" rx="2" ry="2" />
<text  x="171.09" y="511.5" ></text>
</g>
<g >
<title>Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;::CwiseBinaryOp (10,832,580 samples, 0.01%)</title><rect x="263.4" y="293" width="0.2" height="15.0" fill="rgb(243,92,32)" rx="2" ry="2" />
<text  x="266.44" y="303.5" ></text>
</g>
<g >
<title>std::lower_bound&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double&gt; (13,565,751 samples, 0.01%)</title><rect x="381.5" y="389" width="0.2" height="15.0" fill="rgb(236,11,11)" rx="2" ry="2" />
<text  x="384.54" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;::evaluator (18,011,889 samples, 0.02%)</title><rect x="379.5" y="245" width="0.2" height="15.0" fill="rgb(234,118,27)" rx="2" ry="2" />
<text  x="382.53" y="255.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (469,846,171 samples, 0.47%)</title><rect x="1004.9" y="341" width="5.6" height="15.0" fill="rgb(216,156,0)" rx="2" ry="2" />
<text  x="1007.94" y="351.5" ></text>
</g>
<g >
<title>cv::hal::opt_AVX2::(anonymous namespace)::YUV422toRGB8Invoker&lt;0, 0, 0, 3&gt;::operator (104,325,062 samples, 0.11%)</title><rect x="382.1" y="245" width="1.3" height="15.0" fill="rgb(249,64,35)" rx="2" ry="2" />
<text  x="385.13" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::assignCoeff (197,945,922 samples, 0.20%)</title><rect x="202.5" y="309" width="2.3" height="15.0" fill="rgb(219,71,40)" rx="2" ry="2" />
<text  x="205.46" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (57,549,605 samples, 0.06%)</title><rect x="114.2" y="581" width="0.7" height="15.0" fill="rgb(235,185,50)" rx="2" ry="2" />
<text  x="117.17" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt; (18,782,319 samples, 0.02%)</title><rect x="998.1" y="437" width="0.2" height="15.0" fill="rgb(248,91,32)" rx="2" ry="2" />
<text  x="1001.13" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (1,257,021,905 samples, 1.27%)</title><rect x="913.7" y="437" width="14.9" height="15.0" fill="rgb(211,104,49)" rx="2" ry="2" />
<text  x="916.65" y="447.5" ></text>
</g>
<g >
<title>cv::Line2 (8,716,122 samples, 0.01%)</title><rect x="1031.3" y="437" width="0.1" height="15.0" fill="rgb(243,173,51)" rx="2" ry="2" />
<text  x="1034.32" y="447.5" ></text>
</g>
<g >
<title>g_main_context_iteration (535,684,331 samples, 0.54%)</title><rect x="1004.4" y="405" width="6.4" height="15.0" fill="rgb(206,16,46)" rx="2" ry="2" />
<text  x="1007.39" y="415.5" ></text>
</g>
<g >
<title>[[vdso]] (12,730,610,718 samples, 12.85%)</title><rect x="605.7" y="421" width="151.6" height="15.0" fill="rgb(226,31,44)" rx="2" ry="2" />
<text  x="608.73" y="431.5" >[[vdso]]</text>
</g>
<g >
<title>cv::hal::opt_AVX2::(anonymous namespace)::YUV422toRGB8Invoker&lt;0, 0, 0, 3&gt;::operator (340,124,119 samples, 0.34%)</title><rect x="1177.2" y="501" width="4.0" height="15.0" fill="rgb(205,166,45)" rx="2" ry="2" />
<text  x="1180.16" y="511.5" ></text>
</g>
<g >
<title>Eigen::internal::variable_if_dynamic&lt;long, 1&gt;::value (53,072,930 samples, 0.05%)</title><rect x="360.9" y="165" width="0.7" height="15.0" fill="rgb(245,78,34)" rx="2" ry="2" />
<text  x="363.92" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::assignCoeff (75,058,394 samples, 0.08%)</title><rect x="200.0" y="261" width="0.9" height="15.0" fill="rgb(240,21,50)" rx="2" ry="2" />
<text  x="203.00" y="271.5" ></text>
</g>
<g >
<title>create_thread (443,875,538 samples, 0.45%)</title><rect x="1182.3" y="597" width="5.3" height="15.0" fill="rgb(248,203,47)" rx="2" ry="2" />
<text  x="1185.31" y="607.5" ></text>
</g>
<g >
<title>cv::PyrDownVecV&lt;int, unsigned char&gt; (12,567,842 samples, 0.01%)</title><rect x="168.6" y="437" width="0.2" height="15.0" fill="rgb(217,84,12)" rx="2" ry="2" />
<text  x="171.63" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (347,623,817 samples, 0.35%)</title><rect x="245.5" y="197" width="4.1" height="15.0" fill="rgb(207,187,0)" rx="2" ry="2" />
<text  x="248.49" y="207.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop_head (47,049,888 samples, 0.05%)</title><rect x="14.2" y="581" width="0.6" height="15.0" fill="rgb(212,84,25)" rx="2" ry="2" />
<text  x="17.25" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::call_triangular_assignment_loop&lt;1, true, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="293" width="2.5" height="15.0" fill="rgb(221,67,19)" rx="2" ry="2" />
<text  x="202.58" y="303.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (58,801,868 samples, 0.06%)</title><rect x="168.1" y="485" width="0.7" height="15.0" fill="rgb(247,154,12)" rx="2" ry="2" />
<text  x="171.09" y="495.5" ></text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;cv::Point_&lt;float&gt;*, std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;, DataProcessor::log_data (34,583,082 samples, 0.03%)</title><rect x="890.5" y="453" width="0.4" height="15.0" fill="rgb(222,214,12)" rx="2" ry="2" />
<text  x="893.48" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_product_op&lt;float, float&gt;::packetOp&lt;float __vector (341,559,970 samples, 0.34%)</title><rect x="361.6" y="181" width="4.0" height="15.0" fill="rgb(247,53,4)" rx="2" ry="2" />
<text  x="364.55" y="191.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (25,179,795 samples, 0.03%)</title><rect x="114.9" y="581" width="0.3" height="15.0" fill="rgb(246,202,28)" rx="2" ry="2" />
<text  x="117.85" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::QuadPacket&lt;float __vector (11,870,045 samples, 0.01%)</title><rect x="10.1" y="581" width="0.1" height="15.0" fill="rgb(234,141,41)" rx="2" ry="2" />
<text  x="13.06" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (9,967,477 samples, 0.01%)</title><rect x="11.4" y="581" width="0.1" height="15.0" fill="rgb(216,149,13)" rx="2" ry="2" />
<text  x="14.40" y="591.5" ></text>
</g>
<g >
<title>Eigen::operator*&lt;float&gt; (46,878,827 samples, 0.05%)</title><rect x="380.8" y="325" width="0.5" height="15.0" fill="rgb(214,96,42)" rx="2" ry="2" />
<text  x="383.76" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float, float, false, false&gt;::pmul (25,238,678 samples, 0.03%)</title><rect x="249.6" y="229" width="0.3" height="15.0" fill="rgb(249,122,1)" rx="2" ry="2" />
<text  x="252.63" y="239.5" ></text>
</g>
<g >
<title>cv::calcOpticalFlowPyrLK (47,128,334 samples, 0.05%)</title><rect x="170.2" y="421" width="0.5" height="15.0" fill="rgb(217,55,39)" rx="2" ry="2" />
<text  x="173.18" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; &gt;::evaluator (19,711,374 samples, 0.02%)</title><rect x="378.7" y="117" width="0.2" height="15.0" fill="rgb(220,60,33)" rx="2" ry="2" />
<text  x="381.66" y="127.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (477,255,334 samples, 0.48%)</title><rect x="586.2" y="437" width="5.7" height="15.0" fill="rgb(221,1,9)" rx="2" ry="2" />
<text  x="589.21" y="447.5" ></text>
</g>
<g >
<title>gtk_main_iteration_do (539,117,286 samples, 0.54%)</title><rect x="1004.4" y="421" width="6.4" height="15.0" fill="rgb(245,13,39)" rx="2" ry="2" />
<text  x="1007.36" y="431.5" ></text>
</g>
<g >
<title>cv::WorkerThread::thread_body (12,518,693 samples, 0.01%)</title><rect x="44.9" y="581" width="0.1" height="15.0" fill="rgb(232,84,33)" rx="2" ry="2" />
<text  x="47.86" y="591.5" ></text>
</g>
<g >
<title>gdk_window_create_similar_surface (9,202,506 samples, 0.01%)</title><rect x="1005.5" y="213" width="0.2" height="15.0" fill="rgb(207,163,10)" rx="2" ry="2" />
<text  x="1008.54" y="223.5" ></text>
</g>
<g >
<title>icvGets (9,199,775 samples, 0.01%)</title><rect x="169.9" y="549" width="0.1" height="15.0" fill="rgb(209,98,49)" rx="2" ry="2" />
<text  x="172.86" y="559.5" ></text>
</g>
<g >
<title>Eigen::internal::variable_if_dynamic&lt;long, 1&gt;::value (37,806,593 samples, 0.04%)</title><rect x="376.6" y="197" width="0.4" height="15.0" fill="rgb(227,151,26)" rx="2" ry="2" />
<text  x="379.55" y="207.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::loadLhs&lt;float __vector (14,505,939 samples, 0.01%)</title><rect x="118.1" y="581" width="0.1" height="15.0" fill="rgb(226,142,7)" rx="2" ry="2" />
<text  x="121.07" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::assign_op&lt;float, float&gt;::assignCoeff (8,485,430 samples, 0.01%)</title><rect x="200.4" y="245" width="0.1" height="15.0" fill="rgb(220,17,41)" rx="2" ry="2" />
<text  x="203.36" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::coeff (9,002,177 samples, 0.01%)</title><rect x="378.3" y="181" width="0.1" height="15.0" fill="rgb(232,143,21)" rx="2" ry="2" />
<text  x="381.32" y="191.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (127,324,912 samples, 0.13%)</title><rect x="205.6" y="245" width="1.5" height="15.0" fill="rgb(207,27,11)" rx="2" ry="2" />
<text  x="208.58" y="255.5" ></text>
</g>
<g >
<title>cv::PyrDownInvoker&lt;cv::FixPtCast&lt;unsigned char, 8&gt; &gt;::operator (273,665,759 samples, 0.28%)</title><rect x="1162.9" y="501" width="3.2" height="15.0" fill="rgb(224,85,31)" rx="2" ry="2" />
<text  x="1165.88" y="511.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt;::tail&lt;long&gt; (56,887,117 samples, 0.06%)</title><rect x="262.4" y="325" width="0.7" height="15.0" fill="rgb(253,15,37)" rx="2" ry="2" />
<text  x="265.41" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_if&lt;false&gt;::pconj&lt;float __vector (78,969,140 samples, 0.08%)</title><rect x="143.0" y="533" width="1.0" height="15.0" fill="rgb(210,184,1)" rx="2" ry="2" />
<text  x="146.02" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (54,557,615,719 samples, 55.06%)</title><rect x="381.8" y="517" width="649.7" height="15.0" fill="rgb(223,108,52)" rx="2" ry="2" />
<text  x="384.79" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (55,980,208 samples, 0.06%)</title><rect x="366.4" y="197" width="0.7" height="15.0" fill="rgb(245,166,50)" rx="2" ry="2" />
<text  x="369.42" y="207.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;::redux&lt;Eigen::internal::scalar_max_op&lt;float, float, 0&gt; &gt; (107,003,391 samples, 0.11%)</title><rect x="198.3" y="373" width="1.3" height="15.0" fill="rgb(208,8,8)" rx="2" ry="2" />
<text  x="201.30" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (254,442,632 samples, 0.26%)</title><rect x="83.3" y="581" width="3.1" height="15.0" fill="rgb(242,77,49)" rx="2" ry="2" />
<text  x="86.34" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::Data (55,553,438 samples, 0.06%)</title><rect x="378.5" y="213" width="0.7" height="15.0" fill="rgb(217,151,32)" rx="2" ry="2" />
<text  x="381.53" y="223.5" ></text>
</g>
<g >
<title>Eigen::VectorBlock&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1&gt;::VectorBlock (29,710,630 samples, 0.03%)</title><rect x="262.0" y="309" width="0.3" height="15.0" fill="rgb(215,77,47)" rx="2" ry="2" />
<text  x="264.98" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="149" width="0.6" height="15.0" fill="rgb(210,106,14)" rx="2" ry="2" />
<text  x="200.49" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (50,242,398 samples, 0.05%)</title><rect x="315.6" y="181" width="0.6" height="15.0" fill="rgb(253,140,19)" rx="2" ry="2" />
<text  x="318.59" y="191.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (217,740,936 samples, 0.22%)</title><rect x="91.2" y="581" width="2.6" height="15.0" fill="rgb(249,219,9)" rx="2" ry="2" />
<text  x="94.23" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::QuadPacket&lt;float __vector (16,407,908 samples, 0.02%)</title><rect x="1188.5" y="581" width="0.2" height="15.0" fill="rgb(250,75,1)" rx="2" ry="2" />
<text  x="1191.50" y="591.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (173,051,501 samples, 0.17%)</title><rect x="1023.5" y="341" width="2.1" height="15.0" fill="rgb(210,160,22)" rx="2" ry="2" />
<text  x="1026.50" y="351.5" ></text>
</g>
<g >
<title>gdk_display_manager_open_display (85,505,192 samples, 0.09%)</title><rect x="1003.2" y="389" width="1.1" height="15.0" fill="rgb(237,151,21)" rx="2" ry="2" />
<text  x="1006.24" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeff (24,722,269 samples, 0.02%)</title><rect x="204.0" y="277" width="0.3" height="15.0" fill="rgb(243,194,50)" rx="2" ry="2" />
<text  x="206.97" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (964,812,588 samples, 0.97%)</title><rect x="555.5" y="421" width="11.5" height="15.0" fill="rgb(252,28,53)" rx="2" ry="2" />
<text  x="558.52" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::add_assign_op&lt;float, float&gt; &gt; (9,803,615,455 samples, 9.89%)</title><rect x="263.9" y="309" width="116.7" height="15.0" fill="rgb(209,221,33)" rx="2" ry="2" />
<text  x="266.89" y="319.5" >Eigen::interna..</text>
</g>
<g >
<title>g_object_new (16,286,637 samples, 0.02%)</title><rect x="1010.0" y="101" width="0.2" height="15.0" fill="rgb(222,93,12)" rx="2" ry="2" />
<text  x="1013.05" y="111.5" ></text>
</g>
<g >
<title>cv::ThreadPool::run (34,555,681 samples, 0.03%)</title><rect x="383.6" y="373" width="0.5" height="15.0" fill="rgb(249,153,8)" rx="2" ry="2" />
<text  x="386.64" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::pmax&lt;0, float __vector (25,518,915 samples, 0.03%)</title><rect x="198.6" y="325" width="0.3" height="15.0" fill="rgb(226,109,25)" rx="2" ry="2" />
<text  x="201.56" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (24,148,257 samples, 0.02%)</title><rect x="890.5" y="389" width="0.3" height="15.0" fill="rgb(207,97,22)" rx="2" ry="2" />
<text  x="893.55" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (60,432,897 samples, 0.06%)</title><rect x="32.4" y="581" width="0.7" height="15.0" fill="rgb(241,192,25)" rx="2" ry="2" />
<text  x="35.40" y="591.5" ></text>
</g>
<g >
<title>[libgobject-2.0.so.0.7200.4] (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="293" width="0.9" height="15.0" fill="rgb(227,87,43)" rx="2" ry="2" />
<text  x="1006.27" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::loadLhs&lt;float __vector (10,793,366 samples, 0.01%)</title><rect x="146.5" y="565" width="0.1" height="15.0" fill="rgb(237,170,30)" rx="2" ry="2" />
<text  x="149.52" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; &gt;::packet&lt;0, float __vector (820,929,310 samples, 0.83%)</title><rect x="345.4" y="181" width="9.8" height="15.0" fill="rgb(232,48,2)" rx="2" ry="2" />
<text  x="348.40" y="191.5" ></text>
</g>
<g >
<title>Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;::CwiseBinaryOp (9,888,303 samples, 0.01%)</title><rect x="380.9" y="309" width="0.1" height="15.0" fill="rgb(250,74,43)" rx="2" ry="2" />
<text  x="383.86" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::nullary_wrapper&lt;float, Eigen::internal::scalar_constant_op&lt;float&gt;, true, false, false&gt;::packetOp&lt;float __vector (116,576,314 samples, 0.12%)</title><rect x="148.9" y="581" width="1.4" height="15.0" fill="rgb(233,58,46)" rx="2" ry="2" />
<text  x="151.93" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::block_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false, true&gt;::block_evaluator (17,049,670 samples, 0.02%)</title><rect x="378.7" y="101" width="0.2" height="15.0" fill="rgb(253,59,21)" rx="2" ry="2" />
<text  x="381.69" y="111.5" ></text>
</g>
<g >
<title>Eigen::internal::selfadjoint_rank2_update_selector&lt;float, long, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt;, 1&gt;::run (10,045,181,887 samples, 10.14%)</title><rect x="261.7" y="341" width="119.6" height="15.0" fill="rgb(234,224,37)" rx="2" ry="2" />
<text  x="264.70" y="351.5" >Eigen::interna..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::count (227,958,696 samples, 0.23%)</title><rect x="86.4" y="581" width="2.7" height="15.0" fill="rgb(251,50,42)" rx="2" ry="2" />
<text  x="89.37" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; &gt;::~evaluator (9,872,353 samples, 0.01%)</title><rect x="379.4" y="181" width="0.1" height="15.0" fill="rgb(213,226,24)" rx="2" ry="2" />
<text  x="382.41" y="191.5" ></text>
</g>
<g >
<title>Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;::CwiseBinaryOp (28,829,583 samples, 0.03%)</title><rect x="263.4" y="309" width="0.3" height="15.0" fill="rgb(213,63,18)" rx="2" ry="2" />
<text  x="266.37" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt; (825,598,750 samples, 0.83%)</title><rect x="890.9" y="453" width="9.8" height="15.0" fill="rgb(209,59,17)" rx="2" ry="2" />
<text  x="893.89" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (468,133,096 samples, 0.47%)</title><rect x="162.2" y="581" width="5.6" height="15.0" fill="rgb(224,87,3)" rx="2" ry="2" />
<text  x="165.20" y="591.5" ></text>
</g>
<g >
<title>cvWaitKey (539,947,036 samples, 0.54%)</title><rect x="1004.3" y="437" width="6.5" height="15.0" fill="rgb(242,71,28)" rx="2" ry="2" />
<text  x="1007.35" y="447.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;float*, float&gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="53" width="0.6" height="15.0" fill="rgb(209,7,30)" rx="2" ry="2" />
<text  x="200.49" y="63.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (455,546,215 samples, 0.46%)</title><rect x="1005.0" y="293" width="5.4" height="15.0" fill="rgb(217,66,8)" rx="2" ry="2" />
<text  x="1007.96" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const&gt;::evaluator (55,092,167 samples, 0.06%)</title><rect x="197.5" y="293" width="0.6" height="15.0" fill="rgb(224,147,3)" rx="2" ry="2" />
<text  x="200.49" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (9,158,870 samples, 0.01%)</title><rect x="11.0" y="581" width="0.1" height="15.0" fill="rgb(242,23,45)" rx="2" ry="2" />
<text  x="13.99" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::BlockImpl_dense&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false, true&gt;::init (9,901,547 samples, 0.01%)</title><rect x="262.8" y="245" width="0.1" height="15.0" fill="rgb(209,189,35)" rx="2" ry="2" />
<text  x="265.78" y="255.5" ></text>
</g>
<g >
<title>cv::HaarDetectObjects_ScaleImage_Invoker::operator (321,866,479 samples, 0.32%)</title><rect x="1026.6" y="309" width="3.8" height="15.0" fill="rgb(243,215,25)" rx="2" ry="2" />
<text  x="1029.56" y="319.5" ></text>
</g>
<g >
<title>cv::buildOpticalFlowPyramid (58,801,868 samples, 0.06%)</title><rect x="168.1" y="565" width="0.7" height="15.0" fill="rgb(210,112,35)" rx="2" ry="2" />
<text  x="171.09" y="575.5" ></text>
</g>
<g >
<title>Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;::Map (16,237,527 samples, 0.02%)</title><rect x="263.1" y="325" width="0.2" height="15.0" fill="rgb(225,155,52)" rx="2" ry="2" />
<text  x="266.12" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt;, Eigen::Product&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, 0&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (4,716,854,145 samples, 4.76%)</title><rect x="205.5" y="341" width="56.2" height="15.0" fill="rgb(229,132,27)" rx="2" ry="2" />
<text  x="208.52" y="351.5" >Eigen..</text>
</g>
<g >
<title>std::ostream::_M_insert&lt;double&gt; (25,878,465 samples, 0.03%)</title><rect x="890.5" y="421" width="0.3" height="15.0" fill="rgb(207,39,46)" rx="2" ry="2" />
<text  x="893.53" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, Eigen::internal::Dense2Dense, void&gt;::run (9,791,896,084 samples, 9.88%)</title><rect x="264.0" y="277" width="116.6" height="15.0" fill="rgb(243,181,32)" rx="2" ry="2" />
<text  x="267.02" y="287.5" >Eigen::interna..</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::coeff (8,940,032 samples, 0.01%)</title><rect x="378.2" y="181" width="0.1" height="15.0" fill="rgb(215,160,29)" rx="2" ry="2" />
<text  x="381.21" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (230,601,387 samples, 0.23%)</title><rect x="567.0" y="453" width="2.8" height="15.0" fill="rgb(221,189,43)" rx="2" ry="2" />
<text  x="570.01" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (35,553,417 samples, 0.04%)</title><rect x="1189.5" y="597" width="0.4" height="15.0" fill="rgb(246,90,52)" rx="2" ry="2" />
<text  x="1192.50" y="607.5" ></text>
</g>
<g >
<title>Eigen::internal::QuadPacket&lt;float __vector (16,291,605 samples, 0.02%)</title><rect x="121.4" y="549" width="0.2" height="15.0" fill="rgb(248,123,45)" rx="2" ry="2" />
<text  x="124.39" y="559.5" ></text>
</g>
<g >
<title>main (9,681,583 samples, 0.01%)</title><rect x="1181.6" y="549" width="0.1" height="15.0" fill="rgb(237,218,32)" rx="2" ry="2" />
<text  x="1184.63" y="559.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (124,671,749 samples, 0.13%)</title><rect x="381.9" y="309" width="1.5" height="15.0" fill="rgb(246,178,42)" rx="2" ry="2" />
<text  x="384.92" y="319.5" ></text>
</g>
<g >
<title>cv::detail::ScharrDerivInvoker::operator (352,562,875 samples, 0.36%)</title><rect x="1171.2" y="501" width="4.2" height="15.0" fill="rgb(232,100,29)" rx="2" ry="2" />
<text  x="1174.19" y="511.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (433,441,574 samples, 0.44%)</title><rect x="1005.2" y="261" width="5.1" height="15.0" fill="rgb(218,136,27)" rx="2" ry="2" />
<text  x="1008.16" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;,  (231,422,350 samples, 0.23%)</title><rect x="57.7" y="581" width="2.8" height="15.0" fill="rgb(235,187,25)" rx="2" ry="2" />
<text  x="60.73" y="591.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::SparsePyrLKOpticalFlowImpl::calc (409,964,842 samples, 0.41%)</title><rect x="1020.7" y="405" width="4.9" height="15.0" fill="rgb(213,55,22)" rx="2" ry="2" />
<text  x="1023.69" y="415.5" ></text>
</g>
<g >
<title>Eigen::MatrixBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::operator=&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="373" width="2.5" height="15.0" fill="rgb(224,122,49)" rx="2" ry="2" />
<text  x="202.58" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (233,721,442 samples, 0.24%)</title><rect x="835.5" y="437" width="2.8" height="15.0" fill="rgb(205,228,28)" rx="2" ry="2" />
<text  x="838.52" y="447.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (13,147,799 samples, 0.01%)</title><rect x="162.0" y="581" width="0.2" height="15.0" fill="rgb(213,74,25)" rx="2" ry="2" />
<text  x="165.03" y="591.5" ></text>
</g>
<g >
<title>cv::hal::opt_AVX2::(anonymous namespace)::CvtColorLoop_Invoker&lt;cv::hal::opt_AVX2::(anonymous namespace)::RGB2Gray&lt;unsigned char&gt; &gt;::operator (15,041,380 samples, 0.02%)</title><rect x="383.9" y="325" width="0.1" height="15.0" fill="rgb(229,40,17)" rx="2" ry="2" />
<text  x="386.87" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (180,878,437 samples, 0.18%)</title><rect x="89.1" y="581" width="2.1" height="15.0" fill="rgb(222,31,23)" rx="2" ry="2" />
<text  x="92.08" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::_M_ptr (336,885,784 samples, 0.34%)</title><rect x="951.0" y="453" width="4.0" height="15.0" fill="rgb(238,49,46)" rx="2" ry="2" />
<text  x="954.02" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (70,171,374,425 samples, 70.82%)</title><rect x="195.9" y="565" width="835.6" height="15.0" fill="rgb(236,69,32)" rx="2" ry="2" />
<text  x="198.86" y="575.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>[[vdso]] (208,644,471 samples, 0.21%)</title><rect x="11.7" y="581" width="2.5" height="15.0" fill="rgb(212,135,34)" rx="2" ry="2" />
<text  x="14.70" y="591.5" ></text>
</g>
<g >
<title>g_signal_emit_by_name (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="357" width="0.9" height="15.0" fill="rgb(208,151,30)" rx="2" ry="2" />
<text  x="1006.27" y="367.5" ></text>
</g>
<g >
<title>cv::detail::LKTrackerInvoker::operator (100,190,557 samples, 0.10%)</title><rect x="1023.5" y="325" width="1.2" height="15.0" fill="rgb(205,44,43)" rx="2" ry="2" />
<text  x="1026.50" y="335.5" ></text>
</g>
<g >
<title>g_closure_invoke (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="229" width="0.9" height="15.0" fill="rgb(220,223,22)" rx="2" ry="2" />
<text  x="1006.27" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::QuadPacket&lt;float __vector (15,369,374 samples, 0.02%)</title><rect x="10.7" y="581" width="0.2" height="15.0" fill="rgb(218,201,10)" rx="2" ry="2" />
<text  x="13.69" y="591.5" ></text>
</g>
<g >
<title>cv::detectMultiScaleOldFormat (454,168,661 samples, 0.46%)</title><rect x="1025.7" y="405" width="5.4" height="15.0" fill="rgb(225,78,52)" rx="2" ry="2" />
<text  x="1028.72" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeffRef (10,492,255 samples, 0.01%)</title><rect x="31.4" y="581" width="0.1" height="15.0" fill="rgb(246,7,20)" rx="2" ry="2" />
<text  x="34.36" y="591.5" ></text>
</g>
<g >
<title>cv::buildOpticalFlowPyramid (148,145,721 samples, 0.15%)</title><rect x="1020.8" y="389" width="1.7" height="15.0" fill="rgb(210,55,22)" rx="2" ry="2" />
<text  x="1023.78" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt; (237,363,681 samples, 0.24%)</title><rect x="96.8" y="581" width="2.8" height="15.0" fill="rgb(223,29,5)" rx="2" ry="2" />
<text  x="99.77" y="591.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::trackPoints (475,838,979 samples, 0.48%)</title><rect x="1020.0" y="453" width="5.7" height="15.0" fill="rgb(212,135,30)" rx="2" ry="2" />
<text  x="1023.04" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (2,320,218,986 samples, 2.34%)</title><rect x="118.9" y="565" width="27.6" height="15.0" fill="rgb(240,28,38)" rx="2" ry="2" />
<text  x="121.86" y="575.5" >E..</text>
</g>
<g >
<title>__vsnprintf_internal (22,227,842 samples, 0.02%)</title><rect x="890.6" y="373" width="0.2" height="15.0" fill="rgb(230,221,13)" rx="2" ry="2" />
<text  x="893.57" y="383.5" ></text>
</g>
<g >
<title>do_lookup_x (30,102,668 samples, 0.03%)</title><rect x="1182.0" y="453" width="0.3" height="15.0" fill="rgb(212,69,16)" rx="2" ry="2" />
<text  x="1184.95" y="463.5" ></text>
</g>
<g >
<title>DataTransformers::apply_cublic_spline_to_matrix (31,296,129 samples, 0.03%)</title><rect x="381.4" y="421" width="0.4" height="15.0" fill="rgb(227,191,25)" rx="2" ry="2" />
<text  x="384.40" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::shared_ptr (267,406,312 samples, 0.27%)</title><rect x="23.2" y="581" width="3.2" height="15.0" fill="rgb(242,22,27)" rx="2" ry="2" />
<text  x="26.22" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::get (3,637,473,238 samples, 3.67%)</title><rect x="955.0" y="453" width="43.3" height="15.0" fill="rgb(222,201,1)" rx="2" ry="2" />
<text  x="958.03" y="463.5" >std:..</text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (55,092,167 samples, 0.06%)</title><rect x="197.5" y="261" width="0.6" height="15.0" fill="rgb(230,25,23)" rx="2" ry="2" />
<text  x="200.49" y="271.5" ></text>
</g>
<g >
<title>cv::CvCaptureCAM_V4L::convertToRgb (132,356,565 samples, 0.13%)</title><rect x="381.8" y="405" width="1.6" height="15.0" fill="rgb(218,23,45)" rx="2" ry="2" />
<text  x="384.83" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::mapbase_evaluator (16,210,207 samples, 0.02%)</title><rect x="379.6" y="229" width="0.1" height="15.0" fill="rgb(224,213,29)" rx="2" ry="2" />
<text  x="382.55" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::Data (14,365,995 samples, 0.01%)</title><rect x="379.0" y="149" width="0.2" height="15.0" fill="rgb(217,62,45)" rx="2" ry="2" />
<text  x="381.98" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::variable_if_dynamic&lt;long, 1&gt;::value (174,793,876 samples, 0.18%)</title><rect x="159.8" y="581" width="2.1" height="15.0" fill="rgb(241,148,28)" rx="2" ry="2" />
<text  x="162.81" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt; (1,614,665,340 samples, 1.63%)</title><rect x="978.9" y="405" width="19.2" height="15.0" fill="rgb(236,218,4)" rx="2" ry="2" />
<text  x="981.90" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::initAcc (11,819,846 samples, 0.01%)</title><rect x="122.0" y="549" width="0.1" height="15.0" fill="rgb(219,74,17)" rx="2" ry="2" />
<text  x="125.01" y="559.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (10,463,856 samples, 0.01%)</title><rect x="1010.4" y="293" width="0.1" height="15.0" fill="rgb(239,88,45)" rx="2" ry="2" />
<text  x="1013.38" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;::evaluator (9,865,601 samples, 0.01%)</title><rect x="379.0" y="133" width="0.1" height="15.0" fill="rgb(205,152,43)" rx="2" ry="2" />
<text  x="382.03" y="143.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::add_assign_op&lt;float, float&gt; &gt; (9,780,278,982 samples, 9.87%)</title><rect x="264.1" y="261" width="116.5" height="15.0" fill="rgb(251,95,43)" rx="2" ry="2" />
<text  x="267.09" y="271.5" >Eigen::interna..</text>
</g>
<g >
<title>cv::parallel_for_ (36,095,364 samples, 0.04%)</title><rect x="383.6" y="389" width="0.5" height="15.0" fill="rgb(245,195,42)" rx="2" ry="2" />
<text  x="386.63" y="399.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (391,602,790 samples, 0.40%)</title><rect x="1025.7" y="373" width="4.7" height="15.0" fill="rgb(249,138,29)" rx="2" ry="2" />
<text  x="1028.73" y="383.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (47,559,391 samples, 0.05%)</title><rect x="1181.7" y="549" width="0.6" height="15.0" fill="rgb(208,224,6)" rx="2" ry="2" />
<text  x="1184.75" y="559.5" ></text>
</g>
<g >
<title>Eigen::internal::pmul&lt;float __vector (150,676,135 samples, 0.15%)</title><rect x="141.2" y="517" width="1.8" height="15.0" fill="rgb(219,156,35)" rx="2" ry="2" />
<text  x="144.22" y="527.5" ></text>
</g>
<g >
<title>DataProcessor::log_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="485" width="185.9" height="15.0" fill="rgb(215,18,44)" rx="2" ry="2" />
<text  x="198.86" y="495.5" >DataProcessor::log_data</text>
</g>
<g >
<title>_dl_relocate_object (42,564,632 samples, 0.04%)</title><rect x="1181.8" y="517" width="0.5" height="15.0" fill="rgb(249,107,4)" rx="2" ry="2" />
<text  x="1184.80" y="527.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (14,530,240 samples, 0.01%)</title><rect x="890.7" y="325" width="0.1" height="15.0" fill="rgb(245,117,0)" rx="2" ry="2" />
<text  x="893.66" y="335.5" ></text>
</g>
<g >
<title>Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;::rankUpdate&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (10,046,069,067 samples, 10.14%)</title><rect x="261.7" y="357" width="119.6" height="15.0" fill="rgb(240,4,30)" rx="2" ry="2" />
<text  x="264.69" y="367.5" >Eigen::SelfAdj..</text>
</g>
<g >
<title>cv::waitKeyEx (539,947,036 samples, 0.54%)</title><rect x="1004.3" y="453" width="6.5" height="15.0" fill="rgb(214,37,51)" rx="2" ry="2" />
<text  x="1007.35" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::redux_impl&lt;Eigen::internal::scalar_max_op&lt;float, float, 0&gt;, Eigen::internal::redux_evaluator&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;, 3, 0&gt;::run&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt; (105,183,245 samples, 0.11%)</title><rect x="198.3" y="357" width="1.3" height="15.0" fill="rgb(230,192,19)" rx="2" ry="2" />
<text  x="201.30" y="367.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (247,056,421 samples, 0.25%)</title><rect x="792.4" y="421" width="3.0" height="15.0" fill="rgb(217,147,33)" rx="2" ry="2" />
<text  x="795.42" y="431.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (205,522,260 samples, 0.21%)</title><rect x="1023.1" y="389" width="2.5" height="15.0" fill="rgb(218,181,39)" rx="2" ry="2" />
<text  x="1026.13" y="399.5" ></text>
</g>
<g >
<title>cv::HaarDetectObjects_ScaleImage_Invoker::operator (1,625,081,411 samples, 1.64%)</title><rect x="1143.5" y="501" width="19.4" height="15.0" fill="rgb(218,141,54)" rx="2" ry="2" />
<text  x="1146.52" y="511.5" ></text>
</g>
<g >
<title>Eigen::internal::BlockImpl_dense&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false, true&gt;::BlockImpl_dense (40,588,858 samples, 0.04%)</title><rect x="262.6" y="261" width="0.5" height="15.0" fill="rgb(222,176,37)" rx="2" ry="2" />
<text  x="265.57" y="271.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (409,988,414 samples, 0.41%)</title><rect x="885.6" y="453" width="4.9" height="15.0" fill="rgb(244,145,4)" rx="2" ry="2" />
<text  x="888.60" y="463.5" ></text>
</g>
<g >
<title>sendOutput (1,043,689,075 samples, 1.05%)</title><rect x="998.3" y="485" width="12.5" height="15.0" fill="rgb(218,191,30)" rx="2" ry="2" />
<text  x="1001.35" y="495.5" ></text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (26,190,875 samples, 0.03%)</title><rect x="122.5" y="533" width="0.3" height="15.0" fill="rgb(243,7,4)" rx="2" ry="2" />
<text  x="125.48" y="543.5" ></text>
</g>
<g >
<title>Eigen::internal::nullary_wrapper&lt;float, Eigen::internal::scalar_constant_op&lt;float&gt;, true, false, false&gt;::operator (13,705,334 samples, 0.01%)</title><rect x="203.7" y="261" width="0.2" height="15.0" fill="rgb(230,88,33)" rx="2" ry="2" />
<text  x="206.75" y="271.5" ></text>
</g>
<g >
<title>Eigen::fix&lt;0&gt; (52,299,992 samples, 0.05%)</title><rect x="10.1" y="597" width="0.6" height="15.0" fill="rgb(221,159,36)" rx="2" ry="2" />
<text  x="13.06" y="607.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (19,529,524 samples, 0.02%)</title><rect x="1004.7" y="357" width="0.2" height="15.0" fill="rgb(234,147,14)" rx="2" ry="2" />
<text  x="1007.69" y="367.5" ></text>
</g>
<g >
<title>start_thread (51,335,246 samples, 0.05%)</title><rect x="170.1" y="581" width="0.6" height="15.0" fill="rgb(215,171,35)" rx="2" ry="2" />
<text  x="173.13" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pset1&lt;float __vector (170,050,240 samples, 0.17%)</title><rect x="353.1" y="133" width="2.1" height="15.0" fill="rgb(233,57,22)" rx="2" ry="2" />
<text  x="356.15" y="143.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::assignPacket&lt;16, 16, float __vector (118,684,683 samples, 0.12%)</title><rect x="196.1" y="325" width="1.4" height="15.0" fill="rgb(236,206,24)" rx="2" ry="2" />
<text  x="199.08" y="335.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop (73,601,500 samples, 0.07%)</title><rect x="928.6" y="469" width="0.9" height="15.0" fill="rgb(237,74,5)" rx="2" ry="2" />
<text  x="931.63" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::pmadd&lt;float __vector (119,818,209 samples, 0.12%)</title><rect x="34.3" y="581" width="1.4" height="15.0" fill="rgb(228,176,13)" rx="2" ry="2" />
<text  x="37.30" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt;::assignPacket&lt;16, 0, float __vector (9,239,140,321 samples, 9.32%)</title><rect x="267.0" y="229" width="110.0" height="15.0" fill="rgb(240,90,3)" rx="2" ry="2" />
<text  x="270.01" y="239.5" >Eigen::intern..</text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::packet&lt;16, float __vector (14,619,534 samples, 0.01%)</title><rect x="197.0" y="293" width="0.2" height="15.0" fill="rgb(218,40,19)" rx="2" ry="2" />
<text  x="200.00" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::add_assign_op&lt;float, float&gt; &gt; (9,799,993,864 samples, 9.89%)</title><rect x="263.9" y="293" width="116.7" height="15.0" fill="rgb(222,12,23)" rx="2" ry="2" />
<text  x="266.93" y="303.5" >Eigen::interna..</text>
</g>
<g >
<title>cvInitSystem (88,227,904 samples, 0.09%)</title><rect x="1003.2" y="421" width="1.1" height="15.0" fill="rgb(218,136,43)" rx="2" ry="2" />
<text  x="1006.24" y="431.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::_set_noalias&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt; (186,758,497 samples, 0.19%)</title><rect x="195.9" y="405" width="2.3" height="15.0" fill="rgb(250,16,28)" rx="2" ry="2" />
<text  x="198.95" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt;::assignPacket&lt;16, 0, float __vector (53,958,442 samples, 0.05%)</title><rect x="379.8" y="245" width="0.6" height="15.0" fill="rgb(249,137,7)" rx="2" ry="2" />
<text  x="382.77" y="255.5" ></text>
</g>
<g >
<title>g_object_new (11,601,264 samples, 0.01%)</title><rect x="1005.7" y="229" width="0.1" height="15.0" fill="rgb(218,171,6)" rx="2" ry="2" />
<text  x="1008.66" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt; (2,297,456,760 samples, 2.32%)</title><rect x="970.8" y="421" width="27.3" height="15.0" fill="rgb(241,184,29)" rx="2" ry="2" />
<text  x="973.77" y="431.5" >s..</text>
</g>
<g >
<title>Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt;::rows (25,664,395 samples, 0.03%)</title><rect x="204.9" y="293" width="0.3" height="15.0" fill="rgb(223,126,14)" rx="2" ry="2" />
<text  x="207.94" y="303.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop (169,825,778 samples, 0.17%)</title><rect x="45.3" y="581" width="2.0" height="15.0" fill="rgb(246,42,2)" rx="2" ry="2" />
<text  x="48.25" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (16,202,005 samples, 0.02%)</title><rect x="10.3" y="581" width="0.2" height="15.0" fill="rgb(242,54,34)" rx="2" ry="2" />
<text  x="13.33" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pmax&lt;float __vector (11,035,129 samples, 0.01%)</title><rect x="198.7" y="293" width="0.2" height="15.0" fill="rgb(232,2,21)" rx="2" ry="2" />
<text  x="201.74" y="303.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (321,866,479 samples, 0.32%)</title><rect x="1026.6" y="325" width="3.8" height="15.0" fill="rgb(237,2,12)" rx="2" ry="2" />
<text  x="1029.56" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (49,419,914 samples, 0.05%)</title><rect x="113.6" y="581" width="0.5" height="15.0" fill="rgb(219,12,21)" rx="2" ry="2" />
<text  x="116.56" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::~shared_ptr (243,992,428 samples, 0.25%)</title><rect x="99.6" y="581" width="2.9" height="15.0" fill="rgb(220,72,9)" rx="2" ry="2" />
<text  x="102.60" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::assign_op&lt;float, float&gt;::assignCoeff (9,211,934 samples, 0.01%)</title><rect x="202.9" y="293" width="0.1" height="15.0" fill="rgb(245,43,28)" rx="2" ry="2" />
<text  x="205.88" y="303.5" ></text>
</g>
<g >
<title>DataProcessor::process_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="469" width="185.9" height="15.0" fill="rgb(226,90,54)" rx="2" ry="2" />
<text  x="198.86" y="479.5" >DataProcessor::process_d..</text>
</g>
<g >
<title>[[vdso]] (204,593,494 samples, 0.21%)</title><rect x="39.3" y="581" width="2.4" height="15.0" fill="rgb(231,8,25)" rx="2" ry="2" />
<text  x="42.26" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="357" width="2.5" height="15.0" fill="rgb(236,110,23)" rx="2" ry="2" />
<text  x="202.58" y="367.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;DataProcessor::log_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="533" width="185.9" height="15.0" fill="rgb(221,59,40)" rx="2" ry="2" />
<text  x="198.86" y="543.5" >std::thread::_Invoker&lt;st..</text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;float, std::allocator&lt;float&gt; &gt;*, std::vector&lt;std::vector&lt;float, std::allocator&lt;float&gt; &gt;, std::allocator&lt;std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt; &gt;, DataTransformers::apply_cublic_spline_to_matrix (31,296,129 samples, 0.03%)</title><rect x="381.4" y="437" width="0.4" height="15.0" fill="rgb(253,104,4)" rx="2" ry="2" />
<text  x="384.40" y="447.5" ></text>
</g>
<g >
<title>g_signal_emit (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="277" width="0.9" height="15.0" fill="rgb(253,136,30)" rx="2" ry="2" />
<text  x="1006.27" y="287.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (58,424,894 samples, 0.06%)</title><rect x="300.5" y="213" width="0.7" height="15.0" fill="rgb(240,126,2)" rx="2" ry="2" />
<text  x="303.53" y="223.5" ></text>
</g>
<g >
<title>cvNamedWindow (92,260,217 samples, 0.09%)</title><rect x="1003.2" y="437" width="1.1" height="15.0" fill="rgb(210,186,18)" rx="2" ry="2" />
<text  x="1006.24" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::selfadjoint_product_impl&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 17, false, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, 0, true&gt;::run&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (4,711,411,368 samples, 4.75%)</title><rect x="205.6" y="261" width="56.1" height="15.0" fill="rgb(217,69,34)" rx="2" ry="2" />
<text  x="208.58" y="271.5" >Eigen..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt; (248,161,487 samples, 0.25%)</title><rect x="52.3" y="581" width="3.0" height="15.0" fill="rgb(213,29,23)" rx="2" ry="2" />
<text  x="55.31" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_if&lt;false&gt;::pconj&lt;float __vector (323,856,224 samples, 0.33%)</title><rect x="27.3" y="581" width="3.8" height="15.0" fill="rgb(210,10,25)" rx="2" ry="2" />
<text  x="30.29" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,562,503,446 samples, 3.60%)</title><rect x="761.2" y="453" width="42.5" height="15.0" fill="rgb(221,20,5)" rx="2" ry="2" />
<text  x="764.24" y="463.5" >std..</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::binary_evaluator (62,735,952 samples, 0.06%)</title><rect x="378.5" y="229" width="0.7" height="15.0" fill="rgb(242,189,35)" rx="2" ry="2" />
<text  x="381.48" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::pminmax_impl&lt;0&gt;::run&lt;float __vector (17,345,928 samples, 0.02%)</title><rect x="198.7" y="309" width="0.2" height="15.0" fill="rgb(238,103,32)" rx="2" ry="2" />
<text  x="201.66" y="319.5" ></text>
</g>
<g >
<title>__GI___sched_yield (20,275,599 samples, 0.02%)</title><rect x="167.8" y="581" width="0.2" height="15.0" fill="rgb(212,142,47)" rx="2" ry="2" />
<text  x="170.79" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (10,746,678 samples, 0.01%)</title><rect x="10.2" y="581" width="0.1" height="15.0" fill="rgb(236,164,17)" rx="2" ry="2" />
<text  x="13.21" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (52,162,532 samples, 0.05%)</title><rect x="299.9" y="213" width="0.6" height="15.0" fill="rgb(211,193,2)" rx="2" ry="2" />
<text  x="302.90" y="223.5" ></text>
</g>
<g >
<title>cv::cvtColor (129,850,576 samples, 0.13%)</title><rect x="381.9" y="389" width="1.5" height="15.0" fill="rgb(229,125,18)" rx="2" ry="2" />
<text  x="384.86" y="399.5" ></text>
</g>
<g >
<title>cvSetImagesForHaarClassifierCascade (23,881,703 samples, 0.02%)</title><rect x="1030.8" y="373" width="0.3" height="15.0" fill="rgb(249,19,0)" rx="2" ry="2" />
<text  x="1033.83" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::pdiv&lt;float __vector (12,948,164 samples, 0.01%)</title><rect x="197.2" y="277" width="0.2" height="15.0" fill="rgb(209,220,53)" rx="2" ry="2" />
<text  x="200.24" y="287.5" ></text>
</g>
<g >
<title>cvImageWidgetSetImage (400,825,448 samples, 0.40%)</title><rect x="998.5" y="437" width="4.7" height="15.0" fill="rgb(222,183,15)" rx="2" ry="2" />
<text  x="1001.47" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;::evaluator (17,962,471 samples, 0.02%)</title><rect x="379.0" y="197" width="0.2" height="15.0" fill="rgb(250,137,52)" rx="2" ry="2" />
<text  x="381.97" y="207.5" ></text>
</g>
<g >
<title>HeadTracker::trackHeadInFrame (47,128,334 samples, 0.05%)</title><rect x="170.2" y="469" width="0.5" height="15.0" fill="rgb(243,199,38)" rx="2" ry="2" />
<text  x="173.18" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_quotient_op&lt;float, float&gt;::packetOp&lt;float __vector (18,676,625 samples, 0.02%)</title><rect x="197.2" y="293" width="0.2" height="15.0" fill="rgb(223,11,19)" rx="2" ry="2" />
<text  x="200.17" y="303.5" ></text>
</g>
<g >
<title>cvRunHaarClassifierCascadeSum (320,970,859 samples, 0.32%)</title><rect x="1026.6" y="293" width="3.8" height="15.0" fill="rgb(251,201,44)" rx="2" ry="2" />
<text  x="1029.57" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Dense2Dense, void&gt;::run (8,815,242 samples, 0.01%)</title><rect x="198.2" y="357" width="0.1" height="15.0" fill="rgb(249,34,36)" rx="2" ry="2" />
<text  x="201.17" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::Data (55,092,167 samples, 0.06%)</title><rect x="197.5" y="309" width="0.6" height="15.0" fill="rgb(213,65,7)" rx="2" ry="2" />
<text  x="200.49" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt;::coeffRef (19,565,054 samples, 0.02%)</title><rect x="201.7" y="245" width="0.3" height="15.0" fill="rgb(218,107,19)" rx="2" ry="2" />
<text  x="204.73" y="255.5" ></text>
</g>
<g >
<title>cv::hal::integral (36,917,797 samples, 0.04%)</title><rect x="1030.4" y="341" width="0.4" height="15.0" fill="rgb(214,190,9)" rx="2" ry="2" />
<text  x="1033.39" y="351.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (77,420,209 samples, 0.08%)</title><rect x="389.1" y="389" width="0.9" height="15.0" fill="rgb(252,221,19)" rx="2" ry="2" />
<text  x="392.10" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (62,028,840 samples, 0.06%)</title><rect x="344.7" y="181" width="0.7" height="15.0" fill="rgb(208,76,46)" rx="2" ry="2" />
<text  x="347.66" y="191.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (12,824,003 samples, 0.01%)</title><rect x="1189.0" y="581" width="0.2" height="15.0" fill="rgb(208,211,23)" rx="2" ry="2" />
<text  x="1192.00" y="591.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.7200.4] (533,950,768 samples, 0.54%)</title><rect x="1004.4" y="389" width="6.4" height="15.0" fill="rgb(254,206,38)" rx="2" ry="2" />
<text  x="1007.40" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::nullary_wrapper&lt;float, Eigen::internal::scalar_constant_op&lt;float&gt;, true, false, false&gt;::packetOp&lt;float __vector (562,543,571 samples, 0.57%)</title><rect x="348.5" y="165" width="6.7" height="15.0" fill="rgb(231,72,53)" rx="2" ry="2" />
<text  x="351.47" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (549,039,836 samples, 0.55%)</title><rect x="326.2" y="181" width="6.5" height="15.0" fill="rgb(220,30,44)" rx="2" ry="2" />
<text  x="329.17" y="191.5" ></text>
</g>
<g >
<title>__printf_fp_spec (17,477,834 samples, 0.02%)</title><rect x="890.6" y="341" width="0.2" height="15.0" fill="rgb(225,51,27)" rx="2" ry="2" />
<text  x="893.63" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (228,800,504 samples, 0.23%)</title><rect x="910.9" y="437" width="2.8" height="15.0" fill="rgb(236,133,53)" rx="2" ry="2" />
<text  x="913.93" y="447.5" ></text>
</g>
<g >
<title>processData (51,082,138,195 samples, 51.55%)</title><rect x="390.0" y="485" width="608.3" height="15.0" fill="rgb(205,13,9)" rx="2" ry="2" />
<text  x="393.05" y="495.5" >processData</text>
</g>
<g >
<title>icv_strtod (10,683,421 samples, 0.01%)</title><rect x="170.0" y="565" width="0.1" height="15.0" fill="rgb(246,40,5)" rx="2" ry="2" />
<text  x="172.97" y="575.5" ></text>
</g>
<g >
<title>Eigen::NoAlias&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt;, Eigen::MatrixBase&gt;::operator=&lt;Eigen::Product&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, 0&gt; &gt; (4,716,854,145 samples, 4.76%)</title><rect x="205.5" y="357" width="56.2" height="15.0" fill="rgb(207,95,28)" rx="2" ry="2" />
<text  x="208.52" y="367.5" >Eigen..</text>
</g>
<g >
<title>__libc_start_main_impl (9,681,583 samples, 0.01%)</title><rect x="1181.6" y="581" width="0.1" height="15.0" fill="rgb(221,24,52)" rx="2" ry="2" />
<text  x="1184.63" y="591.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (107,962,202 samples, 0.11%)</title><rect x="382.1" y="277" width="1.3" height="15.0" fill="rgb(252,111,24)" rx="2" ry="2" />
<text  x="385.09" y="287.5" ></text>
</g>
<g >
<title>std::__ioinit (55,298,818 samples, 0.06%)</title><rect x="1188.5" y="597" width="0.7" height="15.0" fill="rgb(231,128,9)" rx="2" ry="2" />
<text  x="1191.50" y="607.5" ></text>
</g>
<g >
<title>gdk_pixbuf_new_from_data (16,286,637 samples, 0.02%)</title><rect x="1010.0" y="117" width="0.2" height="15.0" fill="rgb(235,125,9)" rx="2" ry="2" />
<text  x="1013.05" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (58,416,189 samples, 0.06%)</title><rect x="112.1" y="581" width="0.7" height="15.0" fill="rgb(245,86,12)" rx="2" ry="2" />
<text  x="115.08" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::triangular_dense_assignment_kernel&lt;1, 0, 1, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::assignOppositeCoeff (73,772,220 samples, 0.07%)</title><rect x="201.1" y="261" width="0.9" height="15.0" fill="rgb(230,161,17)" rx="2" ry="2" />
<text  x="204.15" y="271.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::loadLhs&lt;float __vector (54,390,426 samples, 0.05%)</title><rect x="122.1" y="549" width="0.7" height="15.0" fill="rgb(211,150,46)" rx="2" ry="2" />
<text  x="125.15" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt; (245,754,257 samples, 0.25%)</title><rect x="93.8" y="581" width="3.0" height="15.0" fill="rgb(253,89,1)" rx="2" ry="2" />
<text  x="96.85" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="373" width="0.1" height="15.0" fill="rgb(207,40,22)" rx="2" ry="2" />
<text  x="201.17" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; &gt;::evaluator (29,644,844 samples, 0.03%)</title><rect x="378.6" y="181" width="0.4" height="15.0" fill="rgb(226,64,45)" rx="2" ry="2" />
<text  x="381.62" y="191.5" ></text>
</g>
<g >
<title>g_signal_emit_valist (353,500,682 samples, 0.36%)</title><rect x="1006.1" y="165" width="4.2" height="15.0" fill="rgb(211,208,50)" rx="2" ry="2" />
<text  x="1009.06" y="175.5" ></text>
</g>
<g >
<title>[libcairo.so.2.11600.0] (32,074,431 samples, 0.03%)</title><rect x="1009.7" y="85" width="0.3" height="15.0" fill="rgb(207,32,25)" rx="2" ry="2" />
<text  x="1012.66" y="95.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;::~evaluator (9,872,353 samples, 0.01%)</title><rect x="379.4" y="197" width="0.1" height="15.0" fill="rgb(252,49,38)" rx="2" ry="2" />
<text  x="382.41" y="207.5" ></text>
</g>
<g >
<title>cv::HaarDetectObjects_ScaleImage_Invoker::operator (27,368,867 samples, 0.03%)</title><rect x="1025.7" y="357" width="0.4" height="15.0" fill="rgb(246,65,38)" rx="2" ry="2" />
<text  x="1028.73" y="367.5" ></text>
</g>
<g >
<title>cv::WorkerThread::thread_loop_wrapper (12,606,508,059 samples, 12.72%)</title><rect x="1031.5" y="565" width="150.1" height="15.0" fill="rgb(253,68,42)" rx="2" ry="2" />
<text  x="1034.48" y="575.5" >cv::WorkerThread::t..</text>
</g>
<g >
<title>Eigen::internal::pload&lt;float __vector (437,290,596 samples, 0.44%)</title><rect x="289.8" y="197" width="5.2" height="15.0" fill="rgb(240,62,9)" rx="2" ry="2" />
<text  x="292.77" y="207.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;::maxCoeff (107,003,391 samples, 0.11%)</title><rect x="198.3" y="405" width="1.3" height="15.0" fill="rgb(209,76,0)" rx="2" ry="2" />
<text  x="201.30" y="415.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (51,335,246 samples, 0.05%)</title><rect x="170.1" y="533" width="0.6" height="15.0" fill="rgb(242,25,9)" rx="2" ry="2" />
<text  x="173.13" y="543.5" ></text>
</g>
<g >
<title>gtk_module_init (81,139,300 samples, 0.08%)</title><rect x="1003.3" y="197" width="0.9" height="15.0" fill="rgb(235,197,10)" rx="2" ry="2" />
<text  x="1006.28" y="207.5" ></text>
</g>
<g >
<title>std::fill_n&lt;float*, long, float&gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="85" width="0.6" height="15.0" fill="rgb(235,173,19)" rx="2" ry="2" />
<text  x="200.49" y="95.5" ></text>
</g>
<g >
<title>EqualizeHistCalcHist_Invoker::operator (216,947,506 samples, 0.22%)</title><rect x="1138.7" y="501" width="2.6" height="15.0" fill="rgb(247,20,21)" rx="2" ry="2" />
<text  x="1141.68" y="511.5" ></text>
</g>
<g >
<title>gdk_window_end_draw_frame (11,909,080 samples, 0.01%)</title><rect x="1005.8" y="245" width="0.1" height="15.0" fill="rgb(208,205,44)" rx="2" ry="2" />
<text  x="1008.80" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (51,335,246 samples, 0.05%)</title><rect x="170.1" y="501" width="0.6" height="15.0" fill="rgb(243,117,3)" rx="2" ry="2" />
<text  x="173.13" y="511.5" ></text>
</g>
<g >
<title>std::operator&amp; (902,032,498 samples, 0.91%)</title><rect x="532.9" y="405" width="10.7" height="15.0" fill="rgb(235,64,29)" rx="2" ry="2" />
<text  x="535.90" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::shared_ptr (1,406,890,171 samples, 1.42%)</title><rect x="550.3" y="437" width="16.7" height="15.0" fill="rgb(213,32,52)" rx="2" ry="2" />
<text  x="553.26" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,282,236 samples, 0.05%)</title><rect x="1021.9" y="357" width="0.5" height="15.0" fill="rgb(205,213,42)" rx="2" ry="2" />
<text  x="1024.86" y="367.5" ></text>
</g>
<g >
<title>cv::cornerMinEigenVal (15,340,767 samples, 0.02%)</title><rect x="1020.1" y="405" width="0.2" height="15.0" fill="rgb(229,29,50)" rx="2" ry="2" />
<text  x="1023.14" y="415.5" ></text>
</g>
<g >
<title>cv::ThreadPool::run (204,772,631 samples, 0.21%)</title><rect x="1023.1" y="373" width="2.5" height="15.0" fill="rgb(250,65,6)" rx="2" ry="2" />
<text  x="1026.13" y="383.5" ></text>
</g>
<g >
<title>cv::hal::cvtBGRtoGray (36,823,905 samples, 0.04%)</title><rect x="383.6" y="421" width="0.5" height="15.0" fill="rgb(238,219,32)" rx="2" ry="2" />
<text  x="386.63" y="431.5" ></text>
</g>
<g >
<title>Eigen::SelfAdjointEigenSolver&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::SelfAdjointEigenSolver&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (15,369,034,015 samples, 15.51%)</title><rect x="198.3" y="437" width="183.0" height="15.0" fill="rgb(252,119,21)" rx="2" ry="2" />
<text  x="201.30" y="447.5" >Eigen::SelfAdjointEigen..</text>
</g>
<g >
<title>Eigen::internal::resize_if_allowed&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::add_assign_op&lt;float, float&gt; &gt; (9,017,341 samples, 0.01%)</title><rect x="380.4" y="245" width="0.1" height="15.0" fill="rgb(220,204,44)" rx="2" ry="2" />
<text  x="383.43" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (664,987,464 samples, 0.67%)</title><rect x="920.7" y="421" width="7.9" height="15.0" fill="rgb(233,146,19)" rx="2" ry="2" />
<text  x="923.70" y="431.5" ></text>
</g>
<g >
<title>Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;::operator=&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt; (210,825,986 samples, 0.21%)</title><rect x="199.6" y="405" width="2.5" height="15.0" fill="rgb(253,99,8)" rx="2" ry="2" />
<text  x="202.58" y="415.5" ></text>
</g>
<g >
<title>cv::pyrDown_&lt;cv::FixPtCast&lt;unsigned char, 8&gt; &gt; (47,128,334 samples, 0.05%)</title><rect x="170.2" y="357" width="0.5" height="15.0" fill="rgb(251,70,41)" rx="2" ry="2" />
<text  x="173.18" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment_no_alias&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="133" width="0.6" height="15.0" fill="rgb(226,96,53)" rx="2" ry="2" />
<text  x="200.49" y="143.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, Eigen::SelfAdjointShape, Eigen::DenseShape, 7&gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (4,711,411,368 samples, 4.75%)</title><rect x="205.6" y="277" width="56.1" height="15.0" fill="rgb(247,78,31)" rx="2" ry="2" />
<text  x="208.58" y="287.5" >Eigen..</text>
</g>
<g >
<title>cv::ThreadPool::run (45,580,652 samples, 0.05%)</title><rect x="170.2" y="325" width="0.5" height="15.0" fill="rgb(244,113,10)" rx="2" ry="2" />
<text  x="173.20" y="335.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (10,683,421 samples, 0.01%)</title><rect x="170.0" y="549" width="0.1" height="15.0" fill="rgb(240,160,30)" rx="2" ry="2" />
<text  x="172.97" y="559.5" ></text>
</g>
<g >
<title>Eigen::SelfAdjointEigenSolver&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::compute&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (15,369,034,015 samples, 15.51%)</title><rect x="198.3" y="421" width="183.0" height="15.0" fill="rgb(216,226,5)" rx="2" ry="2" />
<text  x="201.30" y="431.5" >Eigen::SelfAdjointEigen..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (34,211,869 samples, 0.03%)</title><rect x="184.4" y="581" width="0.4" height="15.0" fill="rgb(209,74,12)" rx="2" ry="2" />
<text  x="187.41" y="591.5" ></text>
</g>
<g >
<title>cv::goodFeaturesToTrack (27,960,825 samples, 0.03%)</title><rect x="1020.0" y="421" width="0.4" height="15.0" fill="rgb(216,31,10)" rx="2" ry="2" />
<text  x="1023.04" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, DataProcessor*, std::default_delete&lt;DataProcessor&gt; &gt;::_M_head (213,789,138 samples, 0.22%)</title><rect x="49.7" y="581" width="2.6" height="15.0" fill="rgb(208,168,53)" rx="2" ry="2" />
<text  x="52.75" y="591.5" ></text>
</g>
<g >
<title>g_main_context_check (19,317,735 samples, 0.02%)</title><rect x="1004.4" y="373" width="0.3" height="15.0" fill="rgb(254,29,44)" rx="2" ry="2" />
<text  x="1007.44" y="383.5" ></text>
</g>
<g >
<title>FacialPointsGenerator::updateTrackedPoints (447,878,154 samples, 0.45%)</title><rect x="1020.4" y="437" width="5.3" height="15.0" fill="rgb(224,105,48)" rx="2" ry="2" />
<text  x="1023.38" y="447.5" ></text>
</g>
<g >
<title>g_signal_emit (469,107,174 samples, 0.47%)</title><rect x="1005.0" y="325" width="5.5" height="15.0" fill="rgb(223,183,39)" rx="2" ry="2" />
<text  x="1007.95" y="335.5" ></text>
</g>
<g >
<title>lll_mutex_lock_optimized (8,813,306 samples, 0.01%)</title><rect x="1141.1" y="469" width="0.1" height="15.0" fill="rgb(239,207,49)" rx="2" ry="2" />
<text  x="1144.10" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::get (596,771,396 samples, 0.60%)</title><rect x="935.9" y="469" width="7.1" height="15.0" fill="rgb(226,67,29)" rx="2" ry="2" />
<text  x="938.92" y="479.5" ></text>
</g>
<g >
<title>Eigen::TriangularViewImpl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u, Eigen::Dense&gt;::operator/= (265,756,219 samples, 0.27%)</title><rect x="202.1" y="405" width="3.2" height="15.0" fill="rgb(247,173,28)" rx="2" ry="2" />
<text  x="205.09" y="415.5" ></text>
</g>
<g >
<title>cv::putText (12,527,598 samples, 0.01%)</title><rect x="1031.3" y="469" width="0.1" height="15.0" fill="rgb(245,58,36)" rx="2" ry="2" />
<text  x="1034.29" y="479.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (54,557,615,719 samples, 55.06%)</title><rect x="381.8" y="549" width="649.7" height="15.0" fill="rgb(250,195,13)" rx="2" ry="2" />
<text  x="384.79" y="559.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>Eigen::VectorBlock&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1&gt;::VectorBlock (48,738,022 samples, 0.05%)</title><rect x="262.5" y="309" width="0.6" height="15.0" fill="rgb(221,7,42)" rx="2" ry="2" />
<text  x="265.48" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_constant_op&lt;float&gt;::packetOp&lt;float __vector (372,866,621 samples, 0.38%)</title><rect x="321.7" y="149" width="4.4" height="15.0" fill="rgb(226,54,5)" rx="2" ry="2" />
<text  x="324.71" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::call_assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="389" width="0.1" height="15.0" fill="rgb(250,72,28)" rx="2" ry="2" />
<text  x="201.17" y="399.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (51,335,246 samples, 0.05%)</title><rect x="170.1" y="549" width="0.6" height="15.0" fill="rgb(224,99,37)" rx="2" ry="2" />
<text  x="173.13" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, DataProcessor::log_data (15,613,758,706 samples, 15.76%)</title><rect x="195.9" y="501" width="185.9" height="15.0" fill="rgb(221,125,30)" rx="2" ry="2" />
<text  x="198.86" y="511.5" >std::__invoke_impl&lt;void,..</text>
</g>
<g >
<title>cv::ParallelJob::execute (176,208,786 samples, 0.18%)</title><rect x="1023.5" y="357" width="2.1" height="15.0" fill="rgb(231,65,52)" rx="2" ry="2" />
<text  x="1026.46" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::triangular_assignment_loop&lt;Eigen::internal::triangular_dense_assignment_kernel&lt;1, 0, 1, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1u&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;, 1u, -1, true&gt;::run (205,785,331 samples, 0.21%)</title><rect x="199.6" y="277" width="2.4" height="15.0" fill="rgb(233,189,24)" rx="2" ry="2" />
<text  x="202.58" y="287.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::_set&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="181" width="0.6" height="15.0" fill="rgb(245,55,54)" rx="2" ry="2" />
<text  x="200.49" y="191.5" ></text>
</g>
<g >
<title>cv::copyMakeBorder (49,034,114 samples, 0.05%)</title><rect x="1022.5" y="389" width="0.6" height="15.0" fill="rgb(239,12,46)" rx="2" ry="2" />
<text  x="1025.54" y="399.5" ></text>
</g>
<g >
<title>gtk_css_provider_load_from_file (67,610,076 samples, 0.07%)</title><rect x="1003.4" y="133" width="0.8" height="15.0" fill="rgb(219,184,28)" rx="2" ry="2" />
<text  x="1006.37" y="143.5" ></text>
</g>
<g >
<title>cv::detail::ScharrDerivInvoker::operator (71,151,291 samples, 0.07%)</title><rect x="1024.7" y="325" width="0.8" height="15.0" fill="rgb(243,216,39)" rx="2" ry="2" />
<text  x="1027.69" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Dense2Dense, void&gt;::run (55,092,167 samples, 0.06%)</title><rect x="197.5" y="117" width="0.6" height="15.0" fill="rgb(206,171,15)" rx="2" ry="2" />
<text  x="200.49" y="127.5" ></text>
</g>
<g >
<title>std::atomic&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::node*&gt;::load (2,816,104,775 samples, 2.84%)</title><rect x="510.1" y="421" width="33.5" height="15.0" fill="rgb(215,108,8)" rx="2" ry="2" />
<text  x="513.11" y="431.5" >st..</text>
</g>
<g >
<title>cv::hal::cvtOnePlaneYUVtoBGR (125,892,008 samples, 0.13%)</title><rect x="381.9" y="357" width="1.5" height="15.0" fill="rgb(206,50,9)" rx="2" ry="2" />
<text  x="384.90" y="367.5" ></text>
</g>
<g >
<title>cv::ParallelJob::execute (321,866,479 samples, 0.32%)</title><rect x="1026.6" y="341" width="3.8" height="15.0" fill="rgb(218,198,44)" rx="2" ry="2" />
<text  x="1029.56" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (9,110,619 samples, 0.01%)</title><rect x="11.1" y="581" width="0.1" height="15.0" fill="rgb(249,84,49)" rx="2" ry="2" />
<text  x="14.10" y="591.5" ></text>
</g>
<g >
<title>[libappmenu-gtk-module.so] (81,139,300 samples, 0.08%)</title><rect x="1003.3" y="181" width="0.9" height="15.0" fill="rgb(239,192,45)" rx="2" ry="2" />
<text  x="1006.28" y="191.5" ></text>
</g>
<g >
<title>EqualizeHistLut_Invoker::operator (31,255,240 samples, 0.03%)</title><rect x="389.6" y="373" width="0.4" height="15.0" fill="rgb(221,124,27)" rx="2" ry="2" />
<text  x="392.62" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (470,970,111 samples, 0.48%)</title><rect x="873.5" y="421" width="5.7" height="15.0" fill="rgb(227,133,52)" rx="2" ry="2" />
<text  x="876.54" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::padd&lt;float __vector (525,012,626 samples, 0.53%)</title><rect x="283.5" y="197" width="6.3" height="15.0" fill="rgb(208,131,10)" rx="2" ry="2" />
<text  x="286.52" y="207.5" ></text>
</g>
<g >
<title>WebCam::updateFrame (690,919,010 samples, 0.70%)</title><rect x="381.8" y="469" width="8.2" height="15.0" fill="rgb(211,85,14)" rx="2" ry="2" />
<text  x="384.81" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_constant_op&lt;float&gt;::packetOp&lt;float __vector (115,033,560 samples, 0.12%)</title><rect x="156.4" y="581" width="1.3" height="15.0" fill="rgb(234,4,0)" rx="2" ry="2" />
<text  x="159.37" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (238,854,757 samples, 0.24%)</title><rect x="798.9" y="437" width="2.8" height="15.0" fill="rgb(247,32,0)" rx="2" ry="2" />
<text  x="801.87" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::func (67,230,744 samples, 0.07%)</title><rect x="365.6" y="197" width="0.8" height="15.0" fill="rgb(222,82,25)" rx="2" ry="2" />
<text  x="368.62" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (31,863,824 samples, 0.03%)</title><rect x="1022.7" y="373" width="0.4" height="15.0" fill="rgb(230,184,33)" rx="2" ry="2" />
<text  x="1025.72" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (474,109,934 samples, 0.48%)</title><rect x="77.7" y="581" width="5.6" height="15.0" fill="rgb(235,217,10)" rx="2" ry="2" />
<text  x="80.69" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::pmadd&lt;float __vector (28,954,499 samples, 0.03%)</title><rect x="121.7" y="533" width="0.3" height="15.0" fill="rgb(235,162,32)" rx="2" ry="2" />
<text  x="124.66" y="543.5" ></text>
</g>
<g >
<title>cv::line (12,471,457 samples, 0.01%)</title><rect x="1020.5" y="405" width="0.2" height="15.0" fill="rgb(227,179,35)" rx="2" ry="2" />
<text  x="1023.51" y="415.5" ></text>
</g>
<g >
<title>cv::theRNG (23,207,183 samples, 0.02%)</title><rect x="1181.2" y="501" width="0.3" height="15.0" fill="rgb(207,197,36)" rx="2" ry="2" />
<text  x="1184.21" y="511.5" ></text>
</g>
<g >
<title>trackHead (47,128,334 samples, 0.05%)</title><rect x="170.2" y="485" width="0.5" height="15.0" fill="rgb(249,203,15)" rx="2" ry="2" />
<text  x="173.18" y="495.5" ></text>
</g>
<g >
<title>[beatspeak] (215,603,950 samples, 0.22%)</title><rect x="469.1" y="453" width="2.5" height="15.0" fill="rgb(230,65,43)" rx="2" ry="2" />
<text  x="472.06" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="341" width="0.1" height="15.0" fill="rgb(244,120,52)" rx="2" ry="2" />
<text  x="201.17" y="351.5" ></text>
</g>
<g >
<title>EqualizeHistLut_Invoker::operator (189,068,942 samples, 0.19%)</title><rect x="1141.3" y="501" width="2.2" height="15.0" fill="rgb(235,183,29)" rx="2" ry="2" />
<text  x="1144.26" y="511.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (9,185,119 samples, 0.01%)</title><rect x="41.8" y="581" width="0.1" height="15.0" fill="rgb(226,147,13)" rx="2" ry="2" />
<text  x="44.79" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::_M_ptr (293,650,352 samples, 0.30%)</title><rect x="63.2" y="581" width="3.5" height="15.0" fill="rgb(225,33,37)" rx="2" ry="2" />
<text  x="66.16" y="591.5" ></text>
</g>
<g >
<title>g_signal_emit_valist (82,005,637 samples, 0.08%)</title><rect x="1003.3" y="341" width="0.9" height="15.0" fill="rgb(244,101,10)" rx="2" ry="2" />
<text  x="1006.27" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::packet&lt;0, float __vector (535,723,275 samples, 0.54%)</title><rect x="355.2" y="181" width="6.4" height="15.0" fill="rgb(236,67,54)" rx="2" ry="2" />
<text  x="358.17" y="191.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;float*, long, float&gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="69" width="0.6" height="15.0" fill="rgb(246,150,42)" rx="2" ry="2" />
<text  x="200.49" y="79.5" ></text>
</g>
<g >
<title>gtk_main_do_event (439,425,938 samples, 0.44%)</title><rect x="1005.2" y="277" width="5.2" height="15.0" fill="rgb(243,11,23)" rx="2" ry="2" />
<text  x="1008.15" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt; (141,451,806 samples, 0.14%)</title><rect x="931.8" y="469" width="1.6" height="15.0" fill="rgb(225,165,22)" rx="2" ry="2" />
<text  x="934.76" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (51,335,246 samples, 0.05%)</title><rect x="170.1" y="517" width="0.6" height="15.0" fill="rgb(210,94,44)" rx="2" ry="2" />
<text  x="173.13" y="527.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::loadRhs (116,700,125 samples, 0.12%)</title><rect x="122.8" y="549" width="1.4" height="15.0" fill="rgb(208,69,0)" rx="2" ry="2" />
<text  x="125.80" y="559.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::Data::Data (26,903,690 samples, 0.03%)</title><rect x="378.6" y="149" width="0.4" height="15.0" fill="rgb(239,12,2)" rx="2" ry="2" />
<text  x="381.63" y="159.5" ></text>
</g>
<g >
<title>std::operator&amp; (451,912,409 samples, 0.46%)</title><rect x="184.8" y="581" width="5.4" height="15.0" fill="rgb(243,66,44)" rx="2" ry="2" />
<text  x="187.82" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::mapbase_evaluator&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::mapbase_evaluator (13,461,396 samples, 0.01%)</title><rect x="378.7" y="85" width="0.2" height="15.0" fill="rgb(222,74,30)" rx="2" ry="2" />
<text  x="381.74" y="95.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl_base&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, Eigen::internal::generic_product_impl&lt;Eigen::SelfAdjointView&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const&gt;, Eigen::SelfAdjointShape, Eigen::DenseShape, 7&gt; &gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (4,711,411,368 samples, 4.75%)</title><rect x="205.6" y="293" width="56.1" height="15.0" fill="rgb(233,37,26)" rx="2" ry="2" />
<text  x="208.58" y="303.5" >Eigen..</text>
</g>
<g >
<title>Eigen::internal::assign_op&lt;float, float&gt;::assignCoeff (11,038,842 samples, 0.01%)</title><rect x="201.6" y="245" width="0.1" height="15.0" fill="rgb(213,145,12)" rx="2" ry="2" />
<text  x="204.60" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;::packet&lt;16, float __vector (24,998,264 samples, 0.03%)</title><rect x="196.7" y="293" width="0.3" height="15.0" fill="rgb(208,21,18)" rx="2" ry="2" />
<text  x="199.70" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;::evaluator (55,092,167 samples, 0.06%)</title><rect x="197.5" y="341" width="0.6" height="15.0" fill="rgb(218,73,6)" rx="2" ry="2" />
<text  x="200.49" y="351.5" ></text>
</g>
<g >
<title>DataTransformers::PCA (15,575,438,215 samples, 15.72%)</title><rect x="195.9" y="453" width="185.4" height="15.0" fill="rgb(223,225,51)" rx="2" ry="2" />
<text  x="198.86" y="463.5" >DataTransformers::PCA</text>
</g>
<g >
<title>cv::hal::resize (23,650,388 samples, 0.02%)</title><rect x="169.0" y="565" width="0.3" height="15.0" fill="rgb(219,57,34)" rx="2" ry="2" />
<text  x="171.97" y="575.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt; (163,921,425 samples, 0.17%)</title><rect x="801.7" y="437" width="2.0" height="15.0" fill="rgb(250,137,49)" rx="2" ry="2" />
<text  x="804.71" y="447.5" ></text>
</g>
<g >
<title>Eigen::internal::pmadd&lt;float __vector (1,636,239,462 samples, 1.65%)</title><rect x="230.1" y="213" width="19.5" height="15.0" fill="rgb(221,27,51)" rx="2" ry="2" />
<text  x="233.15" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,729,795 samples, 0.03%)</title><rect x="1009.7" y="69" width="0.3" height="15.0" fill="rgb(250,114,30)" rx="2" ry="2" />
<text  x="1012.70" y="79.5" ></text>
</g>
<g >
<title>icv_k0_ippiSqrIntegral_8u32s64f_C1R (36,450,108 samples, 0.04%)</title><rect x="1030.4" y="325" width="0.4" height="15.0" fill="rgb(211,149,9)" rx="2" ry="2" />
<text  x="1033.39" y="335.5" ></text>
</g>
<g >
<title>cv::hal::opt_AVX2::(anonymous namespace)::CvtColorLoop_Invoker&lt;cv::hal::opt_AVX2::(anonymous namespace)::RGB2Gray&lt;unsigned char&gt; &gt;::operator (149,232,178 samples, 0.15%)</title><rect x="1175.4" y="501" width="1.8" height="15.0" fill="rgb(242,51,45)" rx="2" ry="2" />
<text  x="1178.39" y="511.5" ></text>
</g>
<g >
<title>gtk_container_propagate_draw (361,397,787 samples, 0.36%)</title><rect x="1006.0" y="245" width="4.3" height="15.0" fill="rgb(239,15,32)" rx="2" ry="2" />
<text  x="1008.99" y="255.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (10,589,047 samples, 0.01%)</title><rect x="1004.5" y="357" width="0.1" height="15.0" fill="rgb(216,165,11)" rx="2" ry="2" />
<text  x="1007.50" y="367.5" ></text>
</g>
<g >
<title>cv::hal::opt_AVX2::cvtBGRtoGray (36,095,364 samples, 0.04%)</title><rect x="383.6" y="405" width="0.5" height="15.0" fill="rgb(229,0,22)" rx="2" ry="2" />
<text  x="386.63" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::coeff (21,595,053 samples, 0.02%)</title><rect x="378.2" y="197" width="0.2" height="15.0" fill="rgb(239,67,21)" rx="2" ry="2" />
<text  x="381.18" y="207.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_abs_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; &gt;::maxCoeff&lt;0&gt; (107,003,391 samples, 0.11%)</title><rect x="198.3" y="389" width="1.3" height="15.0" fill="rgb(222,145,17)" rx="2" ry="2" />
<text  x="201.30" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; &gt;::evaluator (17,962,471 samples, 0.02%)</title><rect x="379.0" y="181" width="0.2" height="15.0" fill="rgb(222,137,40)" rx="2" ry="2" />
<text  x="381.97" y="191.5" ></text>
</g>
<g >
<title>Eigen::internal::pabs&lt;float __vector (23,837,117 samples, 0.02%)</title><rect x="199.2" y="309" width="0.3" height="15.0" fill="rgb(249,210,14)" rx="2" ry="2" />
<text  x="202.24" y="319.5" ></text>
</g>
<g >
<title>DataProcessor::log_data (44,479,098,182 samples, 44.89%)</title><rect x="399.0" y="469" width="529.6" height="15.0" fill="rgb(248,17,12)" rx="2" ry="2" />
<text  x="401.95" y="479.5" >DataProcessor::log_data</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::binary_evaluator (28,730,786 samples, 0.03%)</title><rect x="378.6" y="165" width="0.4" height="15.0" fill="rgb(235,167,21)" rx="2" ry="2" />
<text  x="381.63" y="175.5" ></text>
</g>
<g >
<title>Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;::operator=&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::Replicate&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;, -1, 1&gt; const&gt; &gt; (8,815,242 samples, 0.01%)</title><rect x="198.2" y="437" width="0.1" height="15.0" fill="rgb(254,218,10)" rx="2" ry="2" />
<text  x="201.17" y="447.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.7200.4] (9,096,291 samples, 0.01%)</title><rect x="1003.6" y="101" width="0.1" height="15.0" fill="rgb(228,59,6)" rx="2" ry="2" />
<text  x="1006.58" y="111.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_product_op&lt;float, float&gt;::packetOp&lt;float __vector (115,110,839 samples, 0.12%)</title><rect x="157.7" y="581" width="1.4" height="15.0" fill="rgb(240,43,52)" rx="2" ry="2" />
<text  x="160.74" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::_M_ptr (2,933,008,996 samples, 2.96%)</title><rect x="963.2" y="437" width="34.9" height="15.0" fill="rgb(211,93,25)" rx="2" ry="2" />
<text  x="966.20" y="447.5" >st..</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::coeff (122,741,932 samples, 0.12%)</title><rect x="203.0" y="293" width="1.5" height="15.0" fill="rgb(247,162,54)" rx="2" ry="2" />
<text  x="205.99" y="303.5" ></text>
</g>
<g >
<title>HeadTracker::trackHeadInFrame (940,915,112 samples, 0.95%)</title><rect x="1020.0" y="469" width="11.2" height="15.0" fill="rgb(221,102,10)" rx="2" ry="2" />
<text  x="1023.04" y="479.5" ></text>
</g>
<g >
<title>beatspeak (99,087,484,554 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(212,29,1)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >beatspeak</text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::packet&lt;0, float __vector (5,961,028,360 samples, 6.02%)</title><rect x="301.2" y="213" width="71.0" height="15.0" fill="rgb(230,12,26)" rx="2" ry="2" />
<text  x="304.22" y="223.5" >Eigen::i..</text>
</g>
<g >
<title>gtk_css_provider_load_from_path (70,742,554 samples, 0.07%)</title><rect x="1003.3" y="149" width="0.9" height="15.0" fill="rgb(239,228,53)" rx="2" ry="2" />
<text  x="1006.33" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_constant_op&lt;float&gt;::packetOp&lt;float __vector (352,000,826 samples, 0.36%)</title><rect x="351.0" y="149" width="4.2" height="15.0" fill="rgb(214,147,20)" rx="2" ry="2" />
<text  x="353.98" y="159.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (45,331,165 samples, 0.05%)</title><rect x="118.3" y="581" width="0.6" height="15.0" fill="rgb(205,51,48)" rx="2" ry="2" />
<text  x="121.32" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (9,890,175 samples, 0.01%)</title><rect x="10.9" y="581" width="0.1" height="15.0" fill="rgb(218,19,40)" rx="2" ry="2" />
<text  x="13.87" y="591.5" ></text>
</g>
<g >
<title>cv::PyrDownInvoker&lt;cv::FixPtCast&lt;unsigned char, 8&gt; &gt;::operator (58,801,868 samples, 0.06%)</title><rect x="168.1" y="453" width="0.7" height="15.0" fill="rgb(246,150,22)" rx="2" ry="2" />
<text  x="171.09" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::scalar_sum_op&lt;float, float&gt;::packetOp&lt;float __vector (364,129,304 samples, 0.37%)</title><rect x="367.9" y="197" width="4.3" height="15.0" fill="rgb(241,185,29)" rx="2" ry="2" />
<text  x="370.87" y="207.5" ></text>
</g>
<g >
<title>gtk_init_check (88,227,904 samples, 0.09%)</title><rect x="1003.2" y="405" width="1.1" height="15.0" fill="rgb(239,88,48)" rx="2" ry="2" />
<text  x="1006.24" y="415.5" ></text>
</g>
<g >
<title>cv::parallel_for_ (47,128,334 samples, 0.05%)</title><rect x="170.2" y="341" width="0.5" height="15.0" fill="rgb(221,132,3)" rx="2" ry="2" />
<text  x="173.18" y="351.5" ></text>
</g>
<g >
<title>cv::resize (23,650,388 samples, 0.02%)</title><rect x="169.0" y="581" width="0.3" height="15.0" fill="rgb(206,116,1)" rx="2" ry="2" />
<text  x="171.97" y="591.5" ></text>
</g>
<g >
<title>cv::(anonymous namespace)::ParallelLoopBodyWrapper::operator (3,614,305,672 samples, 3.65%)</title><rect x="1138.5" y="517" width="43.0" height="15.0" fill="rgb(249,152,11)" rx="2" ry="2" />
<text  x="1141.47" y="527.5" >cv::..</text>
</g>
<g >
<title>cv::buildOpticalFlowPyramid (47,128,334 samples, 0.05%)</title><rect x="170.2" y="389" width="0.5" height="15.0" fill="rgb(253,191,32)" rx="2" ry="2" />
<text  x="173.18" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_traits&lt;float, float, false, false, 1, 0&gt;::madd&lt;float __vector (1,844,863,990 samples, 1.86%)</title><rect x="124.2" y="549" width="22.0" height="15.0" fill="rgb(226,209,40)" rx="2" ry="2" />
<text  x="127.19" y="559.5" >E..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (1,858,640,062 samples, 1.88%)</title><rect x="569.8" y="453" width="22.1" height="15.0" fill="rgb(238,202,46)" rx="2" ry="2" />
<text  x="572.76" y="463.5" >s..</text>
</g>
<g >
<title>cv::pyrDown (58,801,868 samples, 0.06%)</title><rect x="168.1" y="549" width="0.7" height="15.0" fill="rgb(219,202,28)" rx="2" ry="2" />
<text  x="171.09" y="559.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (85,505,192 samples, 0.09%)</title><rect x="1003.2" y="373" width="1.1" height="15.0" fill="rgb(216,59,4)" rx="2" ry="2" />
<text  x="1006.24" y="383.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (42,564,632 samples, 0.04%)</title><rect x="1181.8" y="501" width="0.5" height="15.0" fill="rgb(254,52,10)" rx="2" ry="2" />
<text  x="1184.80" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (462,515,402 samples, 0.47%)</title><rect x="561.5" y="405" width="5.5" height="15.0" fill="rgb(223,14,54)" rx="2" ry="2" />
<text  x="564.50" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::BlockImpl_dense&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false, true&gt;::outerStride (10,843,306 samples, 0.01%)</title><rect x="262.9" y="245" width="0.1" height="15.0" fill="rgb(252,137,2)" rx="2" ry="2" />
<text  x="265.91" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt; const&gt; &gt;, Eigen::internal::add_assign_op&lt;float, float&gt;, 0&gt;::assignCoeff (103,561,936 samples, 0.10%)</title><rect x="377.2" y="213" width="1.3" height="15.0" fill="rgb(227,166,18)" rx="2" ry="2" />
<text  x="380.23" y="223.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (9,457,463 samples, 0.01%)</title><rect x="1005.8" y="229" width="0.1" height="15.0" fill="rgb(252,36,14)" rx="2" ry="2" />
<text  x="1008.80" y="239.5" ></text>
</g>
<g >
<title>elf_machine_rela (41,227,677 samples, 0.04%)</title><rect x="1181.8" y="485" width="0.5" height="15.0" fill="rgb(234,49,20)" rx="2" ry="2" />
<text  x="1184.82" y="495.5" ></text>
</g>
<g >
<title>Eigen::internal::ploadu&lt;float __vector (204,572,447 samples, 0.21%)</title><rect x="152.1" y="581" width="2.4" height="15.0" fill="rgb(230,47,31)" rx="2" ry="2" />
<text  x="155.08" y="591.5" ></text>
</g>
<g >
<title>cv::copyMakeBorder (129,634,475 samples, 0.13%)</title><rect x="1020.9" y="373" width="1.5" height="15.0" fill="rgb(220,187,21)" rx="2" ry="2" />
<text  x="1023.89" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (492,431,336 samples, 0.50%)</title><rect x="867.7" y="421" width="5.8" height="15.0" fill="rgb(215,226,1)" rx="2" ry="2" />
<text  x="870.68" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::pbroadcast4&lt;float __vector (95,832,612 samples, 0.10%)</title><rect x="123.0" y="533" width="1.2" height="15.0" fill="rgb(224,90,39)" rx="2" ry="2" />
<text  x="126.04" y="543.5" ></text>
</g>
<g >
<title>g_object_new_valist (11,601,264 samples, 0.01%)</title><rect x="1005.7" y="213" width="0.1" height="15.0" fill="rgb(228,227,20)" rx="2" ry="2" />
<text  x="1008.66" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::~shared_ptr (208,011,970 samples, 0.21%)</title><rect x="933.4" y="469" width="2.5" height="15.0" fill="rgb(250,191,40)" rx="2" ry="2" />
<text  x="936.45" y="479.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float&gt;::binary_evaluator (17,074,309 samples, 0.02%)</title><rect x="379.0" y="165" width="0.2" height="15.0" fill="rgb(242,63,21)" rx="2" ry="2" />
<text  x="381.98" y="175.5" ></text>
</g>
<g >
<title>Eigen::BlockImpl&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; const, -1, 1, false, Eigen::Dense&gt;::BlockImpl (45,103,490 samples, 0.05%)</title><rect x="262.5" y="277" width="0.6" height="15.0" fill="rgb(210,4,53)" rx="2" ry="2" />
<text  x="265.53" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (54,557,615,719 samples, 55.06%)</title><rect x="381.8" y="533" width="649.7" height="15.0" fill="rgb(224,83,32)" rx="2" ry="2" />
<text  x="384.79" y="543.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>Eigen::internal::pstore&lt;float, float __vector (53,798,416 samples, 0.05%)</title><rect x="38.4" y="581" width="0.6" height="15.0" fill="rgb(208,55,20)" rx="2" ry="2" />
<text  x="41.36" y="591.5" ></text>
</g>
<g >
<title>EqualizeHistCalcHist_Invoker::operator (43,979,277 samples, 0.04%)</title><rect x="389.1" y="373" width="0.5" height="15.0" fill="rgb(233,193,44)" rx="2" ry="2" />
<text  x="392.10" y="383.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.7200.4] (473,046,059 samples, 0.48%)</title><rect x="1004.9" y="357" width="5.7" height="15.0" fill="rgb(215,181,41)" rx="2" ry="2" />
<text  x="1007.92" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (55,092,167 samples, 0.06%)</title><rect x="197.5" y="245" width="0.6" height="15.0" fill="rgb(243,8,40)" rx="2" ry="2" />
<text  x="200.49" y="255.5" ></text>
</g>
<g >
<title>[libgdk-3.so.0.2404.29] (19,079,874 samples, 0.02%)</title><rect x="1005.4" y="229" width="0.3" height="15.0" fill="rgb(240,120,51)" rx="2" ry="2" />
<text  x="1008.43" y="239.5" ></text>
</g>
<g >
<title>[libgtk-3.so.0.2404.29] (67,610,076 samples, 0.07%)</title><rect x="1003.4" y="117" width="0.8" height="15.0" fill="rgb(226,98,20)" rx="2" ry="2" />
<text  x="1006.37" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::plainobjectbase_evaluator_data&lt;float, -1&gt;::outerStride (10,318,403 samples, 0.01%)</title><rect x="200.8" y="245" width="0.1" height="15.0" fill="rgb(235,42,29)" rx="2" ry="2" />
<text  x="203.77" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt; (294,138,770 samples, 0.30%)</title><rect x="795.4" y="421" width="3.5" height="15.0" fill="rgb(206,100,19)" rx="2" ry="2" />
<text  x="798.37" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;,  (224,213,964 samples, 0.23%)</title><rect x="60.5" y="581" width="2.7" height="15.0" fill="rgb(208,66,8)" rx="2" ry="2" />
<text  x="63.49" y="591.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (541,220,107 samples, 0.55%)</title><rect x="879.2" y="437" width="6.4" height="15.0" fill="rgb(242,115,51)" rx="2" ry="2" />
<text  x="882.15" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;DataProcessor, std::default_delete&lt;DataProcessor&gt; &gt;::get (433,071,876 samples, 0.44%)</title><rect x="102.5" y="581" width="5.2" height="15.0" fill="rgb(210,26,44)" rx="2" ry="2" />
<text  x="105.51" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::conj_helper&lt;float __vector (114,547,729 samples, 0.12%)</title><rect x="115.2" y="581" width="1.4" height="15.0" fill="rgb(205,63,11)" rx="2" ry="2" />
<text  x="118.19" y="591.5" ></text>
</g>
<g >
<title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 0&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt;, Eigen::internal::Dense2Dense, void&gt;::run (186,758,497 samples, 0.19%)</title><rect x="195.9" y="373" width="2.3" height="15.0" fill="rgb(216,175,8)" rx="2" ry="2" />
<text  x="198.95" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;float, float&gt;, 0&gt;::rows (34,832,306 samples, 0.04%)</title><rect x="204.8" y="309" width="0.4" height="15.0" fill="rgb(237,161,21)" rx="2" ry="2" />
<text  x="207.83" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::call_triangular_assignment_loop&lt;1, false, Eigen::TriangularView&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1u&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (265,756,219 samples, 0.27%)</title><rect x="202.1" y="341" width="3.2" height="15.0" fill="rgb(224,127,45)" rx="2" ry="2" />
<text  x="205.09" y="351.5" ></text>
</g>
<g >
<title>DataProcessor::log_data (32,763,453 samples, 0.03%)</title><rect x="890.5" y="437" width="0.4" height="15.0" fill="rgb(250,95,16)" rx="2" ry="2" />
<text  x="893.48" y="447.5" ></text>
</g>
<g >
<title>cv::pyrDown (9,485,884 samples, 0.01%)</title><rect x="1022.4" y="373" width="0.1" height="15.0" fill="rgb(236,184,45)" rx="2" ry="2" />
<text  x="1025.43" y="383.5" ></text>
</g>
<g >
<title>Eigen::internal::add_assign_op&lt;float, float&gt;::assignPacket&lt;16, float __vector (58,391,020 samples, 0.06%)</title><rect x="110.7" y="581" width="0.7" height="15.0" fill="rgb(238,193,13)" rx="2" ry="2" />
<text  x="113.69" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (51,335,246 samples, 0.05%)</title><rect x="170.1" y="565" width="0.6" height="15.0" fill="rgb(239,166,23)" rx="2" ry="2" />
<text  x="173.13" y="575.5" ></text>
</g>
</g>
</svg>

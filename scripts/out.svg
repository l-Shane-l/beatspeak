<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>_IO_acquire_lock_fct (2,471,087 samples, 2.08%)</title><rect x="473.5" y="245" width="24.6" height="15.0" fill="rgb(222,165,15)" rx="2" ry="2" />
<text  x="476.46" y="255.5" >_..</text>
</g>
<g >
<title>std::__invoke&lt;void  (874,680 samples, 0.74%)</title><rect x="645.8" y="245" width="8.7" height="15.0" fill="rgb(224,90,18)" rx="2" ry="2" />
<text  x="648.84" y="255.5" ></text>
</g>
<g >
<title>dl_main (405,648 samples, 0.34%)</title><rect x="159.3" y="309" width="4.0" height="15.0" fill="rgb(206,225,7)" rx="2" ry="2" />
<text  x="162.25" y="319.5" ></text>
</g>
<g >
<title>_dl_start_user (1,838,535 samples, 1.55%)</title><rect x="654.5" y="325" width="18.3" height="15.0" fill="rgb(223,10,23)" rx="2" ry="2" />
<text  x="657.54" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (146,971 samples, 0.12%)</title><rect x="645.8" y="69" width="1.5" height="15.0" fill="rgb(213,189,24)" rx="2" ry="2" />
<text  x="648.84" y="79.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (146,971 samples, 0.12%)</title><rect x="645.8" y="101" width="1.5" height="15.0" fill="rgb(246,62,20)" rx="2" ry="2" />
<text  x="648.84" y="111.5" ></text>
</g>
<g >
<title>_dl_load_cache_lookup (507,572 samples, 0.43%)</title><rect x="789.2" y="181" width="5.1" height="15.0" fill="rgb(248,210,26)" rx="2" ry="2" />
<text  x="792.21" y="191.5" ></text>
</g>
<g >
<title>__GI__dl_allocate_tls (823,737 samples, 0.69%)</title><rect x="778.7" y="181" width="8.2" height="15.0" fill="rgb(214,35,45)" rx="2" ry="2" />
<text  x="781.65" y="191.5" ></text>
</g>
<g >
<title>[unknown] (55,566,716 samples, 46.87%)</title><rect x="92.4" y="325" width="553.0" height="15.0" fill="rgb(208,56,13)" rx="2" ry="2" />
<text  x="95.40" y="335.5" >[unknown]</text>
</g>
<g >
<title>icvXMLParseTag (9,600,499 samples, 8.10%)</title><rect x="303.1" y="293" width="95.5" height="15.0" fill="rgb(254,73,0)" rx="2" ry="2" />
<text  x="306.06" y="303.5" >icvXMLParse..</text>
</g>
<g >
<title>trackHead (84,368 samples, 0.07%)</title><rect x="653.7" y="213" width="0.8" height="15.0" fill="rgb(209,110,34)" rx="2" ry="2" />
<text  x="656.70" y="223.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (440,778 samples, 0.37%)</title><rect x="147.1" y="309" width="4.4" height="15.0" fill="rgb(227,189,24)" rx="2" ry="2" />
<text  x="150.08" y="319.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (910,119 samples, 0.77%)</title><rect x="672.9" y="133" width="9.0" height="15.0" fill="rgb(244,125,47)" rx="2" ry="2" />
<text  x="675.85" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,727,375 samples, 1.46%)</title><rect x="832.8" y="181" width="17.2" height="15.0" fill="rgb(210,220,17)" rx="2" ry="2" />
<text  x="835.77" y="191.5" ></text>
</g>
<g >
<title>beatspeak (118,562,284 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(249,64,3)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >beatspeak</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (812,988 samples, 0.69%)</title><rect x="681.9" y="117" width="8.1" height="15.0" fill="rgb(240,61,2)" rx="2" ry="2" />
<text  x="684.91" y="127.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (874,680 samples, 0.74%)</title><rect x="645.8" y="229" width="8.7" height="15.0" fill="rgb(218,84,38)" rx="2" ry="2" />
<text  x="648.84" y="239.5" ></text>
</g>
<g >
<title>cvGetFileNode (960,156 samples, 0.81%)</title><rect x="251.6" y="293" width="9.6" height="15.0" fill="rgb(213,108,30)" rx="2" ry="2" />
<text  x="254.61" y="303.5" ></text>
</g>
<g >
<title>__libc_start_call_main (11,453,896 samples, 9.66%)</title><rect x="672.9" y="293" width="114.0" height="15.0" fill="rgb(232,156,24)" rx="2" ry="2" />
<text  x="675.85" y="303.5" >__libc_start_c..</text>
</g>
<g >
<title>cv::CvCaptureCAM_V4L::createBuffers (837,815 samples, 0.71%)</title><rect x="770.3" y="149" width="8.4" height="15.0" fill="rgb(235,3,34)" rx="2" ry="2" />
<text  x="773.31" y="159.5" ></text>
</g>
<g >
<title>DataProcessor::setup_log (175,029 samples, 0.15%)</title><rect x="650.2" y="197" width="1.8" height="15.0" fill="rgb(248,104,49)" rx="2" ry="2" />
<text  x="653.23" y="207.5" ></text>
</g>
<g >
<title>do_lookup_x (175,029 samples, 0.15%)</title><rect x="650.2" y="101" width="1.8" height="15.0" fill="rgb(233,69,1)" rx="2" ry="2" />
<text  x="653.23" y="111.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (837,815 samples, 0.71%)</title><rect x="770.3" y="101" width="8.4" height="15.0" fill="rgb(234,174,49)" rx="2" ry="2" />
<text  x="773.31" y="111.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (837,815 samples, 0.71%)</title><rect x="770.3" y="133" width="8.4" height="15.0" fill="rgb(248,131,3)" rx="2" ry="2" />
<text  x="773.31" y="143.5" ></text>
</g>
<g >
<title>add_dependency (910,547 samples, 0.77%)</title><rect x="850.0" y="181" width="9.0" height="15.0" fill="rgb(225,76,34)" rx="2" ry="2" />
<text  x="852.96" y="191.5" ></text>
</g>
<g >
<title>cvSetSeqBlockSize (233,847 samples, 0.20%)</title><rect x="297.3" y="261" width="2.3" height="15.0" fill="rgb(231,159,33)" rx="2" ry="2" />
<text  x="300.28" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (558,888 samples, 0.47%)</title><rect x="794.3" y="149" width="5.5" height="15.0" fill="rgb(248,48,19)" rx="2" ry="2" />
<text  x="797.26" y="159.5" ></text>
</g>
<g >
<title>[beatspeak] (812,988 samples, 0.69%)</title><rect x="681.9" y="85" width="8.1" height="15.0" fill="rgb(236,215,51)" rx="2" ry="2" />
<text  x="684.91" y="95.5" ></text>
</g>
<g >
<title>_IO_fgets (1,549,599 samples, 1.31%)</title><rect x="17.4" y="309" width="15.4" height="15.0" fill="rgb(240,89,8)" rx="2" ry="2" />
<text  x="20.41" y="319.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char [12]&gt; (173,742 samples, 0.15%)</title><rect x="652.0" y="197" width="1.7" height="15.0" fill="rgb(230,119,50)" rx="2" ry="2" />
<text  x="654.97" y="207.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (440,778 samples, 0.37%)</title><rect x="147.1" y="213" width="4.4" height="15.0" fill="rgb(243,221,13)" rx="2" ry="2" />
<text  x="150.08" y="223.5" ></text>
</g>
<g >
<title>icvFSCreateCollection (4,209,604 samples, 3.55%)</title><rect x="261.2" y="293" width="41.9" height="15.0" fill="rgb(224,228,26)" rx="2" ry="2" />
<text  x="264.16" y="303.5" >icv..</text>
</g>
<g >
<title>cvSetAdd (698,954 samples, 0.59%)</title><rect x="254.2" y="277" width="7.0" height="15.0" fill="rgb(213,95,27)" rx="2" ry="2" />
<text  x="257.21" y="287.5" ></text>
</g>
<g >
<title>_dl_relocate_object (36,767,321 samples, 31.01%)</title><rect x="824.1" y="245" width="365.9" height="15.0" fill="rgb(227,68,9)" rx="2" ry="2" />
<text  x="827.07" y="255.5" >_dl_relocate_object</text>
</g>
<g >
<title>__GI_____strtod_l_internal (9,537,703 samples, 8.04%)</title><rect x="545.8" y="277" width="94.9" height="15.0" fill="rgb(253,163,49)" rx="2" ry="2" />
<text  x="548.82" y="287.5" >__GI_____st..</text>
</g>
<g >
<title>_dl_lookup_symbol_x (34,936,202 samples, 29.47%)</title><rect x="832.8" y="197" width="347.7" height="15.0" fill="rgb(219,53,35)" rx="2" ry="2" />
<text  x="835.77" y="207.5" >_dl_lookup_symbol_x</text>
</g>
<g >
<title>cv::VideoCapture::open (837,815 samples, 0.71%)</title><rect x="770.3" y="229" width="8.4" height="15.0" fill="rgb(211,116,31)" rx="2" ry="2" />
<text  x="773.31" y="239.5" ></text>
</g>
<g >
<title>HeadTracker::HeadTracker (9,792,344 samples, 8.26%)</title><rect x="672.9" y="245" width="97.4" height="15.0" fill="rgb(251,116,33)" rx="2" ry="2" />
<text  x="675.85" y="255.5" >HeadTracker..</text>
</g>
<g >
<title>openaux (2,568,162 samples, 2.17%)</title><rect x="789.2" y="213" width="25.6" height="15.0" fill="rgb(229,10,6)" rx="2" ry="2" />
<text  x="792.21" y="223.5" >o..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (984,243 samples, 0.83%)</title><rect x="82.6" y="325" width="9.8" height="15.0" fill="rgb(216,56,32)" rx="2" ry="2" />
<text  x="85.60" y="335.5" ></text>
</g>
<g >
<title>DataProcessor::log_data (294,570 samples, 0.25%)</title><rect x="647.3" y="197" width="2.9" height="15.0" fill="rgb(241,228,12)" rx="2" ry="2" />
<text  x="650.30" y="207.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (934,263 samples, 0.79%)</title><rect x="814.8" y="197" width="9.3" height="15.0" fill="rgb(208,72,27)" rx="2" ry="2" />
<text  x="817.77" y="207.5" ></text>
</g>
<g >
<title>do_lookup_x (910,119 samples, 0.77%)</title><rect x="672.9" y="117" width="9.0" height="15.0" fill="rgb(214,155,46)" rx="2" ry="2" />
<text  x="675.85" y="127.5" ></text>
</g>
<g >
<title>run (11,453,896 samples, 9.66%)</title><rect x="672.9" y="261" width="114.0" height="15.0" fill="rgb(234,18,24)" rx="2" ry="2" />
<text  x="675.85" y="271.5" >run</text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop (294,570 samples, 0.25%)</title><rect x="647.3" y="181" width="2.9" height="15.0" fill="rgb(250,226,14)" rx="2" ry="2" />
<text  x="650.30" y="191.5" ></text>
</g>
<g >
<title>_dl_catch_exception (405,648 samples, 0.34%)</title><rect x="159.3" y="277" width="4.0" height="15.0" fill="rgb(247,63,13)" rx="2" ry="2" />
<text  x="162.25" y="287.5" ></text>
</g>
<g >
<title>_dl_catch_exception (2,568,162 samples, 2.17%)</title><rect x="789.2" y="229" width="25.6" height="15.0" fill="rgb(215,48,17)" rx="2" ry="2" />
<text  x="792.21" y="239.5" >_..</text>
</g>
<g >
<title>_dl_start (40,507,059 samples, 34.17%)</title><rect x="786.9" y="309" width="403.1" height="15.0" fill="rgb(248,196,52)" rx="2" ry="2" />
<text  x="789.85" y="319.5" >_dl_start</text>
</g>
<g >
<title>std::thread::thread&lt;void  (823,737 samples, 0.69%)</title><rect x="778.7" y="245" width="8.2" height="15.0" fill="rgb(229,80,23)" rx="2" ry="2" />
<text  x="781.65" y="255.5" ></text>
</g>
<g >
<title>cvGetFileNodeByName (4,887,139 samples, 4.12%)</title><rect x="721.7" y="133" width="48.6" height="15.0" fill="rgb(244,65,33)" rx="2" ry="2" />
<text  x="724.67" y="143.5" >cvGe..</text>
</g>
<g >
<title>icvXMLSkipSpaces (13,911,478 samples, 11.73%)</title><rect x="398.6" y="293" width="138.5" height="15.0" fill="rgb(250,23,52)" rx="2" ry="2" />
<text  x="401.61" y="303.5" >icvXMLSkipSpaces</text>
</g>
<g >
<title>strcmp (1,833,594 samples, 1.55%)</title><rect x="1162.2" y="149" width="18.3" height="15.0" fill="rgb(252,112,32)" rx="2" ry="2" />
<text  x="1165.22" y="159.5" ></text>
</g>
<g >
<title>openaux (440,778 samples, 0.37%)</title><rect x="147.1" y="245" width="4.4" height="15.0" fill="rgb(254,229,4)" rx="2" ry="2" />
<text  x="150.08" y="255.5" ></text>
</g>
<g >
<title>getInput (146,971 samples, 0.12%)</title><rect x="645.8" y="213" width="1.5" height="15.0" fill="rgb(226,212,16)" rx="2" ry="2" />
<text  x="648.84" y="223.5" ></text>
</g>
<g >
<title>do_lookup_x (29,372,118 samples, 24.77%)</title><rect x="888.1" y="181" width="292.4" height="15.0" fill="rgb(242,191,7)" rx="2" ry="2" />
<text  x="891.14" y="191.5" >do_lookup_x</text>
</g>
<g >
<title>std::atomic&lt;lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::node*&gt;::load (294,570 samples, 0.25%)</title><rect x="647.3" y="149" width="2.9" height="15.0" fill="rgb(220,7,34)" rx="2" ry="2" />
<text  x="650.30" y="159.5" ></text>
</g>
<g >
<title>__GI_____strtol_l_internal (2,860,243 samples, 2.41%)</title><rect x="223.1" y="293" width="28.5" height="15.0" fill="rgb(253,175,46)" rx="2" ry="2" />
<text  x="226.14" y="303.5" >__..</text>
</g>
<g >
<title>cvLoad (9,792,344 samples, 8.26%)</title><rect x="672.9" y="181" width="97.4" height="15.0" fill="rgb(251,63,7)" rx="2" ry="2" />
<text  x="675.85" y="191.5" >cvLoad</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (874,680 samples, 0.74%)</title><rect x="645.8" y="277" width="8.7" height="15.0" fill="rgb(230,12,50)" rx="2" ry="2" />
<text  x="648.84" y="287.5" ></text>
</g>
<g >
<title>cv::CvCaptureCAM_V4L::open (837,815 samples, 0.71%)</title><rect x="770.3" y="181" width="8.4" height="15.0" fill="rgb(225,24,30)" rx="2" ry="2" />
<text  x="773.31" y="191.5" ></text>
</g>
<g >
<title>__pthread_create_2_1 (823,737 samples, 0.69%)</title><rect x="778.7" y="213" width="8.2" height="15.0" fill="rgb(239,124,31)" rx="2" ry="2" />
<text  x="781.65" y="223.5" ></text>
</g>
<g >
<title>icvXMLParseTag (714,899 samples, 0.60%)</title><rect x="169.3" y="309" width="7.1" height="15.0" fill="rgb(227,187,10)" rx="2" ry="2" />
<text  x="172.31" y="319.5" ></text>
</g>
<g >
<title>icv_strtod (10,416,968 samples, 8.79%)</title><rect x="537.1" y="293" width="103.6" height="15.0" fill="rgb(223,213,29)" rx="2" ry="2" />
<text  x="540.07" y="303.5" >icv_strtod</text>
</g>
<g >
<title>[[stack]] (923,204 samples, 0.78%)</title><rect x="73.1" y="325" width="9.2" height="15.0" fill="rgb(253,99,53)" rx="2" ry="2" />
<text  x="76.14" y="335.5" ></text>
</g>
<g >
<title>version_check_doit (934,263 samples, 0.79%)</title><rect x="814.8" y="229" width="9.3" height="15.0" fill="rgb(226,85,17)" rx="2" ry="2" />
<text  x="817.77" y="239.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (40,507,059 samples, 34.17%)</title><rect x="786.9" y="277" width="403.1" height="15.0" fill="rgb(216,3,25)" rx="2" ry="2" />
<text  x="789.85" y="287.5" >_dl_sysdep_start</text>
</g>
<g >
<title>[libc.so.6] (730,023 samples, 0.62%)</title><rect x="438.2" y="277" width="7.3" height="15.0" fill="rgb(239,196,53)" rx="2" ry="2" />
<text  x="441.22" y="287.5" ></text>
</g>
<g >
<title>_dl_fixup (837,815 samples, 0.71%)</title><rect x="770.3" y="117" width="8.4" height="15.0" fill="rgb(232,50,12)" rx="2" ry="2" />
<text  x="773.31" y="127.5" ></text>
</g>
<g >
<title>WebCam::WebCam (837,815 samples, 0.71%)</title><rect x="770.3" y="245" width="8.4" height="15.0" fill="rgb(236,222,16)" rx="2" ry="2" />
<text  x="773.31" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (11,453,896 samples, 9.66%)</title><rect x="672.9" y="309" width="114.0" height="15.0" fill="rgb(212,86,31)" rx="2" ry="2" />
<text  x="675.85" y="319.5" >__libc_start_m..</text>
</g>
<g >
<title>icvXMLParseValue (46,652,532 samples, 39.35%)</title><rect x="176.4" y="309" width="464.3" height="15.0" fill="rgb(239,145,42)" rx="2" ry="2" />
<text  x="179.43" y="319.5" >icvXMLParseValue</text>
</g>
<g >
<title>match_symbol (430,437 samples, 0.36%)</title><rect x="819.8" y="181" width="4.3" height="15.0" fill="rgb(247,58,46)" rx="2" ry="2" />
<text  x="822.79" y="191.5" ></text>
</g>
<g >
<title>do_lookup_x (837,815 samples, 0.71%)</title><rect x="770.3" y="85" width="8.4" height="15.0" fill="rgb(213,48,31)" rx="2" ry="2" />
<text  x="773.31" y="95.5" ></text>
</g>
<g >
<title>icvReadHaarClassifier (8,069,237 samples, 6.81%)</title><rect x="690.0" y="149" width="80.3" height="15.0" fill="rgb(239,141,7)" rx="2" ry="2" />
<text  x="693.00" y="159.5" >icvReadHa..</text>
</g>
<g >
<title>_dl_map_object (405,648 samples, 0.34%)</title><rect x="159.3" y="245" width="4.0" height="15.0" fill="rgb(238,76,27)" rx="2" ry="2" />
<text  x="162.25" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (874,680 samples, 0.74%)</title><rect x="645.8" y="293" width="8.7" height="15.0" fill="rgb(208,140,47)" rx="2" ry="2" />
<text  x="648.84" y="303.5" ></text>
</g>
<g >
<title>[libgnutls.so.30.31.0] (950,434 samples, 0.80%)</title><rect x="654.5" y="277" width="9.5" height="15.0" fill="rgb(244,24,28)" rx="2" ry="2" />
<text  x="657.54" y="287.5" ></text>
</g>
<g >
<title>[[heap]] (6,344,558 samples, 5.35%)</title><rect x="10.0" y="325" width="63.1" height="15.0" fill="rgb(223,189,29)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >[[heap]]</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (874,680 samples, 0.74%)</title><rect x="645.8" y="261" width="8.7" height="15.0" fill="rgb(226,65,21)" rx="2" ry="2" />
<text  x="648.84" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (744,727 samples, 0.63%)</title><rect x="10.0" y="309" width="7.4" height="15.0" fill="rgb(207,0,12)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (84,368 samples, 0.07%)</title><rect x="653.7" y="181" width="0.8" height="15.0" fill="rgb(232,53,32)" rx="2" ry="2" />
<text  x="656.70" y="191.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char [11]&gt; (84,368 samples, 0.07%)</title><rect x="653.7" y="197" width="0.8" height="15.0" fill="rgb(227,172,36)" rx="2" ry="2" />
<text  x="656.70" y="207.5" ></text>
</g>
<g >
<title>__GI_____strtol_l_internal (311,337 samples, 0.26%)</title><rect x="57.4" y="309" width="3.1" height="15.0" fill="rgb(206,217,46)" rx="2" ry="2" />
<text  x="60.45" y="319.5" ></text>
</g>
<g >
<title>icvGets (605,380 samples, 0.51%)</title><rect x="163.3" y="309" width="6.0" height="15.0" fill="rgb(244,176,21)" rx="2" ry="2" />
<text  x="166.29" y="319.5" ></text>
</g>
<g >
<title>cvCreateSet (451,959 samples, 0.38%)</title><rect x="151.5" y="309" width="4.5" height="15.0" fill="rgb(219,121,3)" rx="2" ry="2" />
<text  x="154.46" y="319.5" ></text>
</g>
<g >
<title>cv::CvCaptureCAM_V4L::initCapture (837,815 samples, 0.71%)</title><rect x="770.3" y="165" width="8.4" height="15.0" fill="rgb(232,20,51)" rx="2" ry="2" />
<text  x="773.31" y="175.5" ></text>
</g>
<g >
<title>open_verify (652,816 samples, 0.55%)</title><rect x="799.8" y="181" width="6.5" height="15.0" fill="rgb(235,173,17)" rx="2" ry="2" />
<text  x="802.83" y="191.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (146,971 samples, 0.12%)</title><rect x="645.8" y="133" width="1.5" height="15.0" fill="rgb(248,88,42)" rx="2" ry="2" />
<text  x="648.84" y="143.5" ></text>
</g>
<g >
<title>sendOutput (173,742 samples, 0.15%)</title><rect x="652.0" y="213" width="1.7" height="15.0" fill="rgb(234,74,39)" rx="2" ry="2" />
<text  x="654.97" y="223.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (175,029 samples, 0.15%)</title><rect x="650.2" y="117" width="1.8" height="15.0" fill="rgb(214,20,30)" rx="2" ry="2" />
<text  x="653.23" y="127.5" ></text>
</g>
<g >
<title>_dl_start_final (40,507,059 samples, 34.17%)</title><rect x="786.9" y="293" width="403.1" height="15.0" fill="rgb(222,77,40)" rx="2" ry="2" />
<text  x="789.85" y="303.5" >_dl_start_final</text>
</g>
<g >
<title>__GI__IO_getline (239,143 samples, 0.20%)</title><rect x="498.1" y="245" width="2.3" height="15.0" fill="rgb(237,155,42)" rx="2" ry="2" />
<text  x="501.05" y="255.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char [9]&gt; (146,971 samples, 0.12%)</title><rect x="645.8" y="197" width="1.5" height="15.0" fill="rgb(242,1,3)" rx="2" ry="2" />
<text  x="648.84" y="207.5" ></text>
</g>
<g >
<title>__cxa_guard_acquire (173,742 samples, 0.15%)</title><rect x="652.0" y="149" width="1.7" height="15.0" fill="rgb(242,75,32)" rx="2" ry="2" />
<text  x="654.97" y="159.5" ></text>
</g>
<g >
<title>cvRead (8,069,237 samples, 6.81%)</title><rect x="690.0" y="165" width="80.3" height="15.0" fill="rgb(235,106,27)" rx="2" ry="2" />
<text  x="693.00" y="175.5" >cvRead</text>
</g>
<g >
<title>_dl_receive_error (934,263 samples, 0.79%)</title><rect x="814.8" y="245" width="9.3" height="15.0" fill="rgb(220,52,10)" rx="2" ry="2" />
<text  x="817.77" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (558,888 samples, 0.47%)</title><rect x="794.3" y="181" width="5.5" height="15.0" fill="rgb(232,58,18)" rx="2" ry="2" />
<text  x="797.26" y="191.5" ></text>
</g>
<g >
<title>cvCreateSeq (2,524,213 samples, 2.13%)</title><rect x="274.5" y="277" width="25.1" height="15.0" fill="rgb(215,23,8)" rx="2" ry="2" />
<text  x="277.48" y="287.5" >c..</text>
</g>
<g >
<title>icvXMLSkipSpaces (1,037,075 samples, 0.87%)</title><rect x="62.8" y="309" width="10.3" height="15.0" fill="rgb(240,60,42)" rx="2" ry="2" />
<text  x="65.82" y="319.5" ></text>
</g>
<g >
<title>__clone3 (915,818 samples, 0.77%)</title><rect x="645.4" y="325" width="9.1" height="15.0" fill="rgb(216,3,35)" rx="2" ry="2" />
<text  x="648.43" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (609,823 samples, 0.51%)</title><rect x="607.6" y="261" width="6.1" height="15.0" fill="rgb(248,85,14)" rx="2" ry="2" />
<text  x="610.58" y="271.5" ></text>
</g>
<g >
<title>FacialRecogniser::FacialRecogniser (9,792,344 samples, 8.26%)</title><rect x="672.9" y="229" width="97.4" height="15.0" fill="rgb(253,112,34)" rx="2" ry="2" />
<text  x="675.85" y="239.5" >FacialRecog..</text>
</g>
<g >
<title>dl_new_hash (2,926,162 samples, 2.47%)</title><rect x="859.0" y="181" width="29.1" height="15.0" fill="rgb(254,98,19)" rx="2" ry="2" />
<text  x="862.02" y="191.5" >dl..</text>
</g>
<g >
<title>[libc.so.6] (911,937 samples, 0.77%)</title><rect x="288.2" y="261" width="9.1" height="15.0" fill="rgb(207,75,28)" rx="2" ry="2" />
<text  x="291.20" y="271.5" ></text>
</g>
<g >
<title>allocate_stack (823,737 samples, 0.69%)</title><rect x="778.7" y="197" width="8.2" height="15.0" fill="rgb(231,64,11)" rx="2" ry="2" />
<text  x="781.65" y="207.5" ></text>
</g>
<g >
<title>dl_main (440,778 samples, 0.37%)</title><rect x="147.1" y="293" width="4.4" height="15.0" fill="rgb(250,162,52)" rx="2" ry="2" />
<text  x="150.08" y="303.5" ></text>
</g>
<g >
<title>_dl_map_segments (440,778 samples, 0.37%)</title><rect x="147.1" y="197" width="4.4" height="15.0" fill="rgb(252,87,30)" rx="2" ry="2" />
<text  x="150.08" y="207.5" ></text>
</g>
<g >
<title>cvSeqPush (347,430 samples, 0.29%)</title><rect x="299.6" y="277" width="3.5" height="15.0" fill="rgb(232,193,2)" rx="2" ry="2" />
<text  x="302.60" y="287.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (173,742 samples, 0.15%)</title><rect x="652.0" y="181" width="1.7" height="15.0" fill="rgb(226,185,21)" rx="2" ry="2" />
<text  x="654.97" y="191.5" ></text>
</g>
<g >
<title>all (118,562,284 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(227,171,25)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (812,988 samples, 0.69%)</title><rect x="681.9" y="133" width="8.1" height="15.0" fill="rgb(214,133,12)" rx="2" ry="2" />
<text  x="684.91" y="143.5" ></text>
</g>
<g >
<title>strcmp (405,648 samples, 0.34%)</title><rect x="159.3" y="229" width="4.0" height="15.0" fill="rgb(254,23,43)" rx="2" ry="2" />
<text  x="162.25" y="239.5" ></text>
</g>
<g >
<title>_dl_fixup (175,029 samples, 0.15%)</title><rect x="650.2" y="133" width="1.8" height="15.0" fill="rgb(208,36,25)" rx="2" ry="2" />
<text  x="653.23" y="143.5" ></text>
</g>
<g >
<title>__GI__dl_allocate_tls_init (823,737 samples, 0.69%)</title><rect x="778.7" y="165" width="8.2" height="15.0" fill="rgb(250,145,28)" rx="2" ry="2" />
<text  x="781.65" y="175.5" ></text>
</g>
<g >
<title>cvCreateCameraCapture_V4L (837,815 samples, 0.71%)</title><rect x="770.3" y="197" width="8.4" height="15.0" fill="rgb(205,172,31)" rx="2" ry="2" />
<text  x="773.31" y="207.5" ></text>
</g>
<g >
<title>cv::CascadeClassifierImpl::load (9,792,344 samples, 8.26%)</title><rect x="672.9" y="197" width="97.4" height="15.0" fill="rgb(231,55,0)" rx="2" ry="2" />
<text  x="675.85" y="207.5" >cv::Cascade..</text>
</g>
<g >
<title>asn1_array2tree (950,434 samples, 0.80%)</title><rect x="654.5" y="261" width="9.5" height="15.0" fill="rgb(217,60,49)" rx="2" ry="2" />
<text  x="657.54" y="271.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;char [9]&gt; (146,971 samples, 0.12%)</title><rect x="645.8" y="181" width="1.5" height="15.0" fill="rgb(221,217,31)" rx="2" ry="2" />
<text  x="648.84" y="191.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (3,680,671 samples, 3.10%)</title><rect x="500.4" y="245" width="36.7" height="15.0" fill="rgb(233,65,41)" rx="2" ry="2" />
<text  x="503.43" y="255.5" >__G..</text>
</g>
<g >
<title>dl_main (40,269,746 samples, 33.97%)</title><rect x="789.2" y="261" width="400.8" height="15.0" fill="rgb(206,153,50)" rx="2" ry="2" />
<text  x="792.21" y="271.5" >dl_main</text>
</g>
<g >
<title>spdlog::pattern_formatter::format (146,971 samples, 0.12%)</title><rect x="645.8" y="85" width="1.5" height="15.0" fill="rgb(220,203,24)" rx="2" ry="2" />
<text  x="648.84" y="95.5" ></text>
</g>
<g >
<title>search_cache (507,572 samples, 0.43%)</title><rect x="789.2" y="165" width="5.1" height="15.0" fill="rgb(246,200,6)" rx="2" ry="2" />
<text  x="792.21" y="175.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (512,536 samples, 0.43%)</title><rect x="52.3" y="309" width="5.1" height="15.0" fill="rgb(232,108,14)" rx="2" ry="2" />
<text  x="55.35" y="319.5" ></text>
</g>
<g >
<title>openaux (405,648 samples, 0.34%)</title><rect x="159.3" y="261" width="4.0" height="15.0" fill="rgb(225,87,13)" rx="2" ry="2" />
<text  x="162.25" y="271.5" ></text>
</g>
<g >
<title>_dl_catch_exception (440,778 samples, 0.37%)</title><rect x="147.1" y="261" width="4.4" height="15.0" fill="rgb(229,0,46)" rx="2" ry="2" />
<text  x="150.08" y="271.5" ></text>
</g>
<g >
<title>call_init (1,838,535 samples, 1.55%)</title><rect x="654.5" y="293" width="18.3" height="15.0" fill="rgb(228,133,27)" rx="2" ry="2" />
<text  x="657.54" y="303.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (173,742 samples, 0.15%)</title><rect x="652.0" y="133" width="1.7" height="15.0" fill="rgb(222,212,41)" rx="2" ry="2" />
<text  x="654.97" y="143.5" ></text>
</g>
<g >
<title>cv::VideoCapture_create (837,815 samples, 0.71%)</title><rect x="770.3" y="213" width="8.4" height="15.0" fill="rgb(210,158,30)" rx="2" ry="2" />
<text  x="773.31" y="223.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (175,029 samples, 0.15%)</title><rect x="650.2" y="181" width="1.8" height="15.0" fill="rgb(219,167,22)" rx="2" ry="2" />
<text  x="653.23" y="191.5" ></text>
</g>
<g >
<title>std::thread::_M_start_thread (823,737 samples, 0.69%)</title><rect x="778.7" y="229" width="8.2" height="15.0" fill="rgb(238,75,29)" rx="2" ry="2" />
<text  x="781.65" y="239.5" ></text>
</g>
<g >
<title>icvXMLParseValue (228,808 samples, 0.19%)</title><rect x="60.5" y="309" width="2.3" height="15.0" fill="rgb(229,26,3)" rx="2" ry="2" />
<text  x="63.55" y="319.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (175,029 samples, 0.15%)</title><rect x="650.2" y="149" width="1.8" height="15.0" fill="rgb(215,86,24)" rx="2" ry="2" />
<text  x="653.23" y="159.5" ></text>
</g>
<g >
<title>[anon] (26,858 samples, 0.02%)</title><rect x="82.3" y="325" width="0.3" height="15.0" fill="rgb(224,55,39)" rx="2" ry="2" />
<text  x="85.33" y="335.5" ></text>
</g>
<g >
<title>do_lookup_x (923,204 samples, 0.78%)</title><rect x="73.1" y="309" width="9.2" height="15.0" fill="rgb(213,114,5)" rx="2" ry="2" />
<text  x="76.14" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (146,971 samples, 0.12%)</title><rect x="645.8" y="37" width="1.5" height="15.0" fill="rgb(228,225,35)" rx="2" ry="2" />
<text  x="648.84" y="47.5" ></text>
</g>
<g >
<title>__GI___tunables_init (237,313 samples, 0.20%)</title><rect x="786.9" y="261" width="2.3" height="15.0" fill="rgb(211,141,18)" rx="2" ry="2" />
<text  x="789.85" y="271.5" ></text>
</g>
<g >
<title>_dl_new_object (558,888 samples, 0.47%)</title><rect x="794.3" y="165" width="5.5" height="15.0" fill="rgb(241,47,26)" rx="2" ry="2" />
<text  x="797.26" y="175.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (1,960,476 samples, 1.65%)</title><rect x="32.8" y="309" width="19.5" height="15.0" fill="rgb(239,61,12)" rx="2" ry="2" />
<text  x="35.83" y="319.5" ></text>
</g>
<g >
<title>cvOpenFileStorage (812,988 samples, 0.69%)</title><rect x="681.9" y="165" width="8.1" height="15.0" fill="rgb(214,8,4)" rx="2" ry="2" />
<text  x="684.91" y="175.5" ></text>
</g>
<g >
<title>is_nodelete (910,547 samples, 0.77%)</title><rect x="850.0" y="165" width="9.0" height="15.0" fill="rgb(239,30,53)" rx="2" ry="2" />
<text  x="852.96" y="175.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (440,778 samples, 0.37%)</title><rect x="147.1" y="277" width="4.4" height="15.0" fill="rgb(239,170,40)" rx="2" ry="2" />
<text  x="150.08" y="287.5" ></text>
</g>
<g >
<title>lock_free_queue&lt;std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt;::pop_head (294,570 samples, 0.25%)</title><rect x="647.3" y="165" width="2.9" height="15.0" fill="rgb(243,229,43)" rx="2" ry="2" />
<text  x="650.30" y="175.5" ></text>
</g>
<g >
<title>processData (469,599 samples, 0.40%)</title><rect x="647.3" y="213" width="4.7" height="15.0" fill="rgb(209,220,20)" rx="2" ry="2" />
<text  x="650.30" y="223.5" ></text>
</g>
<g >
<title>strcmp (470,881 samples, 0.40%)</title><rect x="640.7" y="309" width="4.7" height="15.0" fill="rgb(214,121,25)" rx="2" ry="2" />
<text  x="643.74" y="319.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (175,029 samples, 0.15%)</title><rect x="650.2" y="165" width="1.8" height="15.0" fill="rgb(249,90,52)" rx="2" ry="2" />
<text  x="653.23" y="175.5" ></text>
</g>
<g >
<title>strcmp (848,886 samples, 0.72%)</title><rect x="806.3" y="181" width="8.5" height="15.0" fill="rgb(248,56,36)" rx="2" ry="2" />
<text  x="809.32" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_free (950,434 samples, 0.80%)</title><rect x="654.5" y="245" width="9.5" height="15.0" fill="rgb(220,221,32)" rx="2" ry="2" />
<text  x="657.54" y="255.5" ></text>
</g>
<g >
<title>spdlog::logger::log (146,971 samples, 0.12%)</title><rect x="645.8" y="149" width="1.5" height="15.0" fill="rgb(225,227,28)" rx="2" ry="2" />
<text  x="648.84" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (807,766 samples, 0.68%)</title><rect x="390.6" y="261" width="8.0" height="15.0" fill="rgb(209,120,1)" rx="2" ry="2" />
<text  x="393.57" y="271.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_imgwarp.cpp (888,101 samples, 0.75%)</title><rect x="664.0" y="277" width="8.8" height="15.0" fill="rgb(210,201,40)" rx="2" ry="2" />
<text  x="667.00" y="287.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (36,767,321 samples, 31.01%)</title><rect x="824.1" y="229" width="365.9" height="15.0" fill="rgb(251,223,33)" rx="2" ry="2" />
<text  x="827.07" y="239.5" >elf_dynamic_do_Rela</text>
</g>
<g >
<title>[libc.so.6] (2,085,537 samples, 1.76%)</title><rect x="516.3" y="229" width="20.8" height="15.0" fill="rgb(212,144,31)" rx="2" ry="2" />
<text  x="519.31" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (823,737 samples, 0.69%)</title><rect x="778.7" y="149" width="8.2" height="15.0" fill="rgb(219,60,28)" rx="2" ry="2" />
<text  x="781.65" y="159.5" ></text>
</g>
<g >
<title>round_and_return (815,342 samples, 0.69%)</title><rect x="613.7" y="261" width="8.1" height="15.0" fill="rgb(210,190,43)" rx="2" ry="2" />
<text  x="616.65" y="271.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (173,742 samples, 0.15%)</title><rect x="652.0" y="165" width="1.7" height="15.0" fill="rgb(208,139,20)" rx="2" ry="2" />
<text  x="654.97" y="175.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (957,509 samples, 0.81%)</title><rect x="1180.5" y="213" width="9.5" height="15.0" fill="rgb(223,75,14)" rx="2" ry="2" />
<text  x="1183.47" y="223.5" ></text>
</g>
<g >
<title>str_to_mpn (1,906,621 samples, 1.61%)</title><rect x="621.8" y="261" width="18.9" height="15.0" fill="rgb(221,50,22)" rx="2" ry="2" />
<text  x="624.77" y="271.5" ></text>
</g>
<g >
<title>tunable_is_name (237,313 samples, 0.20%)</title><rect x="786.9" y="245" width="2.3" height="15.0" fill="rgb(216,152,27)" rx="2" ry="2" />
<text  x="789.85" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object (2,568,162 samples, 2.17%)</title><rect x="789.2" y="197" width="25.6" height="15.0" fill="rgb(251,157,7)" rx="2" ry="2" />
<text  x="792.21" y="207.5" >_..</text>
</g>
<g >
<title>cv::CascadeClassifier::load (9,792,344 samples, 8.26%)</title><rect x="672.9" y="213" width="97.4" height="15.0" fill="rgb(227,174,0)" rx="2" ry="2" />
<text  x="675.85" y="223.5" >cv::Cascade..</text>
</g>
<g >
<title>cvGetHashedKey (4,709,518 samples, 3.97%)</title><rect x="351.7" y="277" width="46.9" height="15.0" fill="rgb(241,60,48)" rx="2" ry="2" />
<text  x="354.74" y="287.5" >cvGe..</text>
</g>
<g >
<title>_IO_fgets (9,202,126 samples, 7.76%)</title><rect x="445.5" y="261" width="91.6" height="15.0" fill="rgb(250,155,1)" rx="2" ry="2" />
<text  x="448.48" y="271.5" >_IO_fgets</text>
</g>
<g >
<title>_dl_init (1,838,535 samples, 1.55%)</title><rect x="654.5" y="309" width="18.3" height="15.0" fill="rgb(224,38,41)" rx="2" ry="2" />
<text  x="657.54" y="319.5" ></text>
</g>
<g >
<title>elf_machine_rela (34,936,202 samples, 29.47%)</title><rect x="832.8" y="213" width="347.7" height="15.0" fill="rgb(230,164,22)" rx="2" ry="2" />
<text  x="835.77" y="223.5" >elf_machine_rela</text>
</g>
<g >
<title>_dl_map_object_deps (405,648 samples, 0.34%)</title><rect x="159.3" y="293" width="4.0" height="15.0" fill="rgb(212,83,17)" rx="2" ry="2" />
<text  x="162.25" y="303.5" ></text>
</g>
<g >
<title>cvOpenFileStorage_ (812,988 samples, 0.69%)</title><rect x="681.9" y="149" width="8.1" height="15.0" fill="rgb(233,73,50)" rx="2" ry="2" />
<text  x="684.91" y="159.5" ></text>
</g>
<g >
<title>cv::initInterTab2D (888,101 samples, 0.75%)</title><rect x="664.0" y="261" width="8.8" height="15.0" fill="rgb(253,163,53)" rx="2" ry="2" />
<text  x="667.00" y="271.5" ></text>
</g>
<g >
<title>cvSeqPush (330,632 samples, 0.28%)</title><rect x="156.0" y="309" width="3.3" height="15.0" fill="rgb(254,196,24)" rx="2" ry="2" />
<text  x="158.96" y="319.5" ></text>
</g>
<g >
<title>icvGets (9,202,126 samples, 7.76%)</title><rect x="445.5" y="277" width="91.6" height="15.0" fill="rgb(254,179,9)" rx="2" ry="2" />
<text  x="448.48" y="287.5" >icvGets</text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (146,971 samples, 0.12%)</title><rect x="645.8" y="53" width="1.5" height="15.0" fill="rgb(251,83,3)" rx="2" ry="2" />
<text  x="648.84" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (812,988 samples, 0.69%)</title><rect x="681.9" y="101" width="8.1" height="15.0" fill="rgb(240,2,14)" rx="2" ry="2" />
<text  x="684.91" y="111.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char [13]&gt; (26,858 samples, 0.02%)</title><rect x="82.3" y="309" width="0.3" height="15.0" fill="rgb(246,64,18)" rx="2" ry="2" />
<text  x="85.33" y="319.5" ></text>
</g>
<g >
<title>_dl_fixup (910,119 samples, 0.77%)</title><rect x="672.9" y="149" width="9.0" height="15.0" fill="rgb(211,145,0)" rx="2" ry="2" />
<text  x="675.85" y="159.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [9]&gt; (146,971 samples, 0.12%)</title><rect x="645.8" y="165" width="1.5" height="15.0" fill="rgb(217,122,53)" rx="2" ry="2" />
<text  x="648.84" y="175.5" ></text>
</g>
<g >
<title>start_thread (890,666 samples, 0.75%)</title><rect x="645.7" y="309" width="8.8" height="15.0" fill="rgb(243,73,19)" rx="2" ry="2" />
<text  x="648.68" y="319.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (910,119 samples, 0.77%)</title><rect x="672.9" y="165" width="9.0" height="15.0" fill="rgb(209,56,21)" rx="2" ry="2" />
<text  x="675.85" y="175.5" ></text>
</g>
<g >
<title>main (11,453,896 samples, 9.66%)</title><rect x="672.9" y="277" width="114.0" height="15.0" fill="rgb(254,50,10)" rx="2" ry="2" />
<text  x="675.85" y="287.5" >main</text>
</g>
<g >
<title>check_match (3,782,792 samples, 3.19%)</title><rect x="1142.8" y="165" width="37.7" height="15.0" fill="rgb(226,171,20)" rx="2" ry="2" />
<text  x="1145.82" y="175.5" >che..</text>
</g>
<g >
<title>__mmap64 (440,778 samples, 0.37%)</title><rect x="147.1" y="181" width="4.4" height="15.0" fill="rgb(251,187,45)" rx="2" ry="2" />
<text  x="150.08" y="191.5" ></text>
</g>
<g >
<title>_start (51,962,352 samples, 43.83%)</title><rect x="672.8" y="325" width="517.2" height="15.0" fill="rgb(245,211,4)" rx="2" ry="2" />
<text  x="675.84" y="335.5" >_start</text>
</g>
<g >
<title>spdlog::logger::sink_it_ (146,971 samples, 0.12%)</title><rect x="645.8" y="117" width="1.5" height="15.0" fill="rgb(253,85,47)" rx="2" ry="2" />
<text  x="648.84" y="127.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (2,568,162 samples, 2.17%)</title><rect x="789.2" y="245" width="25.6" height="15.0" fill="rgb(211,10,11)" rx="2" ry="2" />
<text  x="792.21" y="255.5" >_..</text>
</g>
<g >
<title>_dl_check_all_versions (934,263 samples, 0.79%)</title><rect x="814.8" y="213" width="9.3" height="15.0" fill="rgb(211,188,49)" rx="2" ry="2" />
<text  x="817.77" y="223.5" ></text>
</g>
<g >
<title>_dl_map_object (440,778 samples, 0.37%)</title><rect x="147.1" y="229" width="4.4" height="15.0" fill="rgb(237,204,15)" rx="2" ry="2" />
<text  x="150.08" y="239.5" ></text>
</g>
</g>
</svg>
